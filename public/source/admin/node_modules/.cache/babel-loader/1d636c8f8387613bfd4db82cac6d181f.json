{"remainingRequest":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/home/donghai/Desktop/www/clover/public/source/admin/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/donghai/Desktop/www/clover/public/source/admin/src/views/Login.vue","mtime":1575282228744},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Gt from \"../api/Gt.js\"; //用于加载id对应的验证码库，并支持宕机模式 * 暴露\n\nimport logo from \"../assets/img/logo.png\";\nimport logoFace from \"../assets/img/logo-facepalm.png\";\nexport default {\n  name: 'login',\n  data: function data() {\n    return {\n      logo: logo,\n      shake: false,\n      waitShow: true,\n      captchaObj: {},\n      result: {},\n      // 是否已验证极验\n      config: '',\n      menu: '',\n      account: '',\n      password: '',\n      checked: true,\n      isShowLoading: false,\n      accountError: false,\n      passwordError: false,\n      verifyError: false,\n      backgroundImage: this.api.common.bing,\n      bg: {}\n    };\n  },\n  created: function created() {\n    this.bg.backgroundImage = 'url(' + this.backgroundImage + ')';\n    this.getInitGtTest();\n  },\n  watch: {\n    $route: {\n      handler: function handler(route) {\n        this.redirect = route.query && route.query.redirect;\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    getInitGtTest: function getInitGtTest() {\n      var _this = this;\n\n      this.$axios.get(this.api.static.geet + new Date().getTime()).then(function (res) {\n        if (res.status === 200) {\n          var data = res.data;\n          window.initGeetest({\n            gt: data.gt,\n            challenge: data.challenge,\n            offline: !data.success,\n            // 表示用户后台检测极验服务器是否宕机\n            new_captcha: data.new_captcha,\n            // 用于宕机时表示是新验证码的宕机\n            product: \"float\",\n            // 产品形式，包括：float，popup\n            width: \"100%\",\n            https: true\n          }, function (captchaObj) {\n            // 箭头函数 若使用function 使用this报错\n            _this.captchaObj = captchaObj;\n            captchaObj.appendTo(\"#captcha\");\n            captchaObj.onReady(function () {\n              _this.waitShow = false; // 隐藏等待提示\n            });\n            captchaObj.onSuccess(function () {\n              _this.verifyError = false;\n              _this.result = captchaObj.getValidate();\n            });\n            captchaObj.onError(function () {\n              _this.$Message.error(\"出错啦, 请稍后重试!\");\n            });\n          });\n        }\n      }).catch(function (err) {\n        window.console.log(err);\n      });\n    },\n    verifyAccount: function verifyAccount() {\n      if (this.account.length < 1) {\n        this.$Message.error('用户名必填');\n        this.accountError = true;\n      } else {\n        this.accountError = false;\n      }\n    },\n    changeLogo: function changeLogo() {\n      window.console.log(1111);\n      this.logo = logoFace;\n    },\n    verifyPassword: function verifyPassword() {\n      // this.logo = logoFace\n      this.logo = logo;\n\n      if (this.password.length < 1) {\n        this.$Message.error('密码必填，我不会偷看的 ＝。＝');\n        this.passwordError = true;\n      } else {\n        this.passwordError = false;\n      }\n    },\n    forgetPassword: function forgetPassword() {\n      this.$Message.info('请联系您的管理员重置密码');\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      if (this.account != '' && this.password != '') {\n        if (!this.result.geetest_challenge) {\n          this.verifyError = true;\n          return this.$Message.error(\"请先完成验证\");\n        }\n\n        this.$axios.post(this.api.common.login, {\n          username: this.account,\n          password: this.password,\n          geetest_challenge: this.result.geetest_challenge,\n          geetest_validate: this.result.geetest_validate,\n          geetest_seccode: this.result.geetest_seccode\n        }).then(function (response) {\n          var res = response.data;\n\n          if (res.code == 0) {\n            var data = res.data;\n            _this2.isShowLoading = true;\n            _this2.userImg = data.avatar;\n            _this2.token = data.remember_token;\n            _this2.uid = data.id;\n            _this2.config = JSON.stringify(data.config);\n            _this2.menu = JSON.stringify(data.menu);\n            _this2.userInfo = JSON.stringify(data.userInfo);\n            localStorage.setItem('userImg', _this2.userImg);\n            localStorage.setItem('userName', _this2.account);\n            localStorage.setItem('token', _this2.token);\n            localStorage.setItem('uid', _this2.uid);\n            localStorage.setItem('config', _this2.config);\n            localStorage.setItem('menu', _this2.menu);\n            localStorage.setItem('userInfo', _this2.userInfo);\n            localStorage.setItem('userInfo', _this2.userInfo);\n            localStorage.setItem('uploadBase', _this2.api.static.baseUrl);\n            localStorage.setItem('uploadContent', _this2.api.common.upload + '?module=content');\n\n            _this2.$router.push({\n              path: _this2.redirect || '/'\n            });\n          } else {\n            _this2.captchaObj.reset();\n\n            var that = _this2;\n            that.shake = true;\n            setTimeout(function () {\n              that.shake = false;\n            }, 500);\n            _this2.result = {};\n\n            _this2.$Message.error(res.msg);\n          }\n        });\n      } else {\n        if (this.account == '') {\n          this.$Message.error('用户名不能为空');\n          this.accountError = true;\n        }\n\n        if (this.password == '') {\n          this.$Message.error('密码不能为空');\n          this.passwordError = true;\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"login-vue\" :style=\"bg\">\r\n        <div class=\"container\">\r\n            <div class=\"loginBox\" v-bind:class=\"{ 'shake': shake }\">\r\n                <div class=\"userImage\">\r\n                    <!--          <img src=\"@/assets/img/logo-big.png\">-->\r\n                    <img :src=\"logo\">\r\n                </div>\r\n                <form id=\"loginForm\">\r\n                    <div class=\"input-wrapper\" v-bind:class=\"{ 'ivu-form-item-error': accountError }\">\r\n                        <Input prefix=\"ios-contact\" v-model=\"account\" placeholder=\"用户名\" @keyup.enter.native=\"submit\" clearable @on-blur=\"verifyAccount\"/>\r\n                    </div>\r\n                    <div class=\"input-wrapper\" v-bind:class=\"{ 'ivu-form-item-error': passwordError }\">\r\n                        <Input type=\"password\" v-model=\"password\" prefix=\"md-lock\" placeholder=\"密码\" @keyup.enter.native=\"submit\" clearable @on-focus=\"changeLogo\" @on-blur=\"verifyPassword\"/>\r\n                    </div>\r\n                    <div class=\"input-wrapper\" v-bind:class=\"{ 'ivu-form-item-error': verifyError }\">\r\n                        <div v-show=\"waitShow === false\" id=\"captcha\"></div>\r\n                        <div v-show=\"waitShow\" style=\"height: 32px;color: #000\" id=\"wait\"></div>\r\n                    </div>\r\n                    <div class=\"auto-login\">\r\n                        <Checkbox v-model=\"checked\">自动登录</Checkbox>\r\n                        <a @click=\"forgetPassword\">忘记密码?</a>\r\n                    </div>\r\n                    <Button :loading=\"isShowLoading\" class=\"submit\" type=\"primary\" @click=\"submit\">登陆</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n  import Gt from \"../api/Gt.js\" ;//用于加载id对应的验证码库，并支持宕机模式 * 暴露\r\n  import logo from '../assets/img/logo.png'\r\n  import logoFace from '../assets/img/logo-facepalm.png'\r\n  export default {\r\n    name: 'login',\r\n    data() {\r\n      return {\r\n        logo: logo,\r\n        shake:false,\r\n        waitShow: true,\r\n        captchaObj: {},\r\n        result: {}, // 是否已验证极验\r\n        config: '',\r\n        menu: '',\r\n        account: '',\r\n        password: '',\r\n        checked: true,\r\n        isShowLoading: false,\r\n        accountError: false,\r\n        passwordError: false,\r\n        verifyError: false,\r\n        backgroundImage: this.api.common.bing,\r\n        bg: {}\r\n      }\r\n    },\r\n    created() {\r\n      this.bg.backgroundImage = 'url(' + this.backgroundImage +')'\r\n      this.getInitGtTest()\r\n    },\r\n    watch: {\r\n      $route: {\r\n        handler: function(route) {\r\n          this.redirect = route.query && route.query.redirect\r\n        },\r\n        immediate: true\r\n      }\r\n    },\r\n    methods: {\r\n      getInitGtTest() {\r\n        this.$axios.get(this.api.static.geet + (new Date()).getTime())\r\n          .then(res => {\r\n            if (res.status === 200) {\r\n              const data = res.data\r\n              window.initGeetest({\r\n                gt: data.gt,\r\n                challenge: data.challenge,\r\n                offline: !data.success, // 表示用户后台检测极验服务器是否宕机\r\n                new_captcha: data.new_captcha, // 用于宕机时表示是新验证码的宕机\r\n                product: \"float\", // 产品形式，包括：float，popup\r\n                width: \"100%\",\r\n                https: true\r\n              }, captchaObj => { // 箭头函数 若使用function 使用this报错\r\n                this.captchaObj = captchaObj\r\n                captchaObj.appendTo(\"#captcha\");\r\n                captchaObj.onReady(() => {\r\n                  this.waitShow = false // 隐藏等待提示\r\n                });\r\n                captchaObj.onSuccess(() => {\r\n                  this.verifyError = false\r\n                  this.result = captchaObj.getValidate();\r\n                });\r\n                captchaObj.onError(() => {\r\n                  this.$Message.error(\"出错啦, 请稍后重试!\");\r\n                })\r\n              })\r\n            }\r\n          })\r\n          .catch(err => {\r\n            window.console.log(err)\r\n          })\r\n      },\r\n      verifyAccount() {\r\n        if (this.account.length < 1) {\r\n          this.$Message.error('用户名必填')\r\n          this.accountError = true\r\n        } else {\r\n          this.accountError = false\r\n        }\r\n      },\r\n      changeLogo() {\r\n        window.console.log(1111)\r\n        this.logo = logoFace\r\n      },\r\n      verifyPassword() {\r\n        // this.logo = logoFace\r\n        this.logo = logo\r\n        if (this.password.length < 1) {\r\n          this.$Message.error('密码必填，我不会偷看的 ＝。＝')\r\n          this.passwordError = true\r\n        } else {\r\n          this.passwordError = false\r\n        }\r\n      },\r\n      forgetPassword() {\r\n        this.$Message.info('请联系您的管理员重置密码')\r\n      },\r\n      submit() {\r\n        if (this.account != '' && this.password != '') {\r\n          if (!this.result.geetest_challenge) {\r\n            this.verifyError = true\r\n            return this.$Message.error(\"请先完成验证\")\r\n          }\r\n          this.$axios.post(this.api.common.login, {\r\n            username: this.account,\r\n            password: this.password,\r\n            geetest_challenge: this.result.geetest_challenge,\r\n            geetest_validate: this.result.geetest_validate,\r\n            geetest_seccode: this.result.geetest_seccode\r\n          }).then((response) => {\r\n              var res = response.data\r\n              if (res.code == 0)\r\n              {\r\n                var data = res.data\r\n                this.isShowLoading = true\r\n                this.userImg = data.avatar\r\n                this.token = data.remember_token\r\n                this.uid = data.id\r\n                this.config = JSON.stringify(data.config)\r\n                this.menu = JSON.stringify(data.menu)\r\n                this.userInfo = JSON.stringify(data.userInfo)\r\n                localStorage.setItem('userImg', this.userImg)\r\n                localStorage.setItem('userName', this.account)\r\n                localStorage.setItem('token', this.token)\r\n                localStorage.setItem('uid', this.uid)\r\n                localStorage.setItem('config', this.config)\r\n                localStorage.setItem('menu', this.menu)\r\n                localStorage.setItem('userInfo', this.userInfo)\r\n                localStorage.setItem('userInfo', this.userInfo)\r\n                localStorage.setItem('uploadBase', this.api.static.baseUrl)\r\n                localStorage.setItem('uploadContent', this.api.common.upload + '?module=content')\r\n                this.$router.push({path: this.redirect || '/'})\r\n              }else{\r\n                this.captchaObj.reset()\r\n                let that = this;\r\n                that.shake = true\r\n                setTimeout(function(){\r\n                  that.shake = false\r\n                }, 500)\r\n                this.result = {}\r\n                this.$Message.error(res.msg);\r\n              }\r\n            }\r\n          )\r\n        } else {\r\n          if (this.account == '') {\r\n            this.$Message.error('用户名不能为空')\r\n            this.accountError = true\r\n          }\r\n          if (this.password == '') {\r\n            this.$Message.error('密码不能为空')\r\n            this.passwordError = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n    @import \"../assets/css/shake.css\";\r\n    .login-vue {\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: #fff;\r\n        background-repeat: no-repeat;\r\n        background-size:cover;\r\n    }\r\n    .login-vue .container {\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .login-vue .loginBox {\r\n        width: 350px;\r\n        background-color: white;\r\n        box-shadow: 0px 0px 43px -2px rgba(135,130,135,1);\r\n        border-radius: 8px;\r\n        padding: 25px;\r\n        opacity: .7;\r\n    }\r\n    .login-vue .userImage {\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        width: 120px;\r\n        height: 120px;\r\n        margin: 10px auto 30px;\r\n        opacity: .7;\r\n    }\r\n    .login-vue img {\r\n        width: 100%;\r\n    }\r\n    .login-vue .input-wrapper {\r\n        position: relative;\r\n    }\r\n    .login-vue .ivu-input {\r\n        width: 100%;\r\n        /*height: 42px;*/\r\n        padding-top: 15px;\r\n        padding-bottom: 15px;\r\n        margin: 10px 0;\r\n        /*font-size: 14px;*/\r\n    }\r\n    .login-vue .ivu-input-icon {\r\n        top: 8px;\r\n    }\r\n    .login-vue .ivu-input-prefix, .login-vue .ivu-input-suffix {\r\n        top: 10px;\r\n    }\r\n    .login-vue .ivu-checkbox-wrapper {\r\n        color: #9a9a9a;\r\n    }\r\n    .login-vue .auto-login a{\r\n        float: right;\r\n    }\r\n    .login-vue .submit {\r\n        width: 100%;\r\n        margin-top: 35px;\r\n        color: white;\r\n        font-weight: lighter;\r\n    }\r\n    #captcha{\r\n        margin: 10px 0 20px;\r\n        height: 32px;\r\n        color: rgb(0, 0, 0);\r\n        overflow: hidden;\r\n        border: 1px solid #dcdee2;\r\n        border-radius: 4px;\r\n    }\r\n    .geetest_holder.geetest_wind {\r\n        margin-top: -6px;\r\n    }\r\n    .geetest_holder.geetest_wind .geetest_radar_btn, .geetest_holder.geetest_wind .geetest_success_btn\r\n    {\r\n        border: none!important;\r\n    }\r\n    .geetest_holder.geetest_wind .geetest_radar_tip, .geetest_holder.geetest_wind .geetest_success_radar_tip\r\n    {\r\n        font-size: 12px!important;\r\n    }\r\n    @media (max-width: 640px)\r\n    {\r\n\r\n        .login-vue .loginBox {\r\n            width: 320px;\r\n        }\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/views"}]}