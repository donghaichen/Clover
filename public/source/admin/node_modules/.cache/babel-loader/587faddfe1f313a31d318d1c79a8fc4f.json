{"remainingRequest":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/home/donghai/Desktop/www/clover/public/source/admin/src/views/setting/Log.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/donghai/Desktop/www/clover/public/source/admin/src/views/setting/Log.vue","mtime":1574999409000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      tableLoading: true,\n      tableData: [],\n      total: 0,\n      current: 0,\n      pageSize: 0,\n      showBorder: true,\n      showStripe: true,\n      showHeader: true,\n      showIndex: false,\n      showCheckbox: false,\n      fixedHeader: false,\n      tableSize: 'default'\n    };\n  },\n  created: function created() {\n    this.tableData = this.getData(1);\n  },\n  methods: {\n    getData: function getData(page) {\n      var _this = this;\n\n      this.tableLoading = true;\n      page = page > 0 ? page : 0;\n      this.$axios.get(this.api.log.admin + '?page=' + page).then(function (response) {\n        _this.tableData = response.data.data.data;\n        _this.current = response.data.data.current_page;\n        _this.total = response.data.data.total;\n        _this.pageSize = response.data.data.per_page;\n        return _this.tableData;\n      });\n      this.tableLoading = false;\n    },\n    changePage: function changePage(index) {\n      this.getData(index);\n    }\n  },\n  computed: {\n    tableColumns: function tableColumns() {\n      var columns = [];\n\n      if (this.showCheckbox) {\n        columns.push({\n          type: 'selection',\n          width: 60,\n          align: 'center'\n        });\n      }\n\n      columns.push({\n        title: '日志ID',\n        key: 'id',\n        sortable: true\n      });\n      columns.push({\n        title: '用户名',\n        key: 'username',\n        tooltip: true\n      });\n      columns.push({\n        title: '内容',\n        key: 'info',\n        width: 380,\n        tooltip: true,\n        render: function render(h, params) {\n          return h(\"div\", [h(\"Tag\", {\n            props: {\n              color: \"blue\"\n            }\n          }, params.row.info)]);\n        }\n      });\n      columns.push({\n        title: '请求类型',\n        key: 'method',\n        sortable: true,\n        filters: [{\n          label: \"GET\",\n          value: \"GET\"\n        }, {\n          label: \"POST\",\n          value: \"POST\"\n        }, {\n          label: \"PUT\",\n          value: \"PUT\"\n        }, {\n          label: \"DELETE\",\n          value: \"DELETE\"\n        }],\n        filterMultiple: false,\n        filterMethod: function filterMethod(value, row) {\n          if (value == \"GET\") {\n            return row.method == \"GET\";\n          } else if (value == \"POST\") {\n            return row.method == \"POST\";\n          } else if (value == \"PUT\") {\n            return row.method == \"PUT\";\n          } else if (value == \"DELETE\") {\n            return row.method == \"DELETE\";\n          }\n        }\n      });\n      columns.push({\n        title: '控制器',\n        key: 'controller'\n      });\n      columns.push({\n        title: '方法',\n        key: 'action'\n      });\n      columns.push({\n        title: '操作 IP',\n        key: 'created_ip'\n      }); // columns.push({\n      //   title: 'IP 地址',\n      //   key: 'ipInfo',\n      // });\n\n      columns.push({\n        title: '操作时间',\n        key: 'created_at',\n        sortable: true\n      });\n      return columns;\n    }\n  }\n};",{"version":3,"sources":["Log.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"content\">\r\n        <Table\r\n                :loading=\"tableLoading\"\r\n                :border=\"showBorder\"\r\n               :stripe=\"showStripe\"\r\n               :show-header=\"showHeader\"\r\n               :height=\"fixedHeader ? 250 : ''\"\r\n               :size=\"tableSize\"\r\n               :data=\"tableData\"\r\n               :columns=\"tableColumns\"\r\n        >\r\n        </Table>\r\n        <div style=\"margin: 10px;overflow: hidden\">\r\n            <div style=\"float: right;\">\r\n                <Page :total=\"total\" :current=\"current\" :page-size=\"pageSize\" show-total show-elevator @on-change=\"changePage\"></Page>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data () {\r\n      return {\r\n        tableLoading: true,\r\n        tableData: [\r\n        ],\r\n        total: 0,\r\n        current: 0,\r\n        pageSize: 0,\r\n        showBorder: true,\r\n        showStripe: true,\r\n        showHeader: true,\r\n        showIndex: false,\r\n        showCheckbox: false,\r\n        fixedHeader: false,\r\n        tableSize: 'default'\r\n      }\r\n    },\r\n    created: function () {\r\n      this.tableData = this.getData(1)\r\n    },\r\n    methods: {\r\n      getData(page) {\r\n        this.tableLoading = true\r\n        page = page > 0 ? page : 0;\r\n        this.$axios.get(this.api.log.admin + '?page=' + page)\r\n          .then((response) => {\r\n            this.tableData = response.data.data.data\r\n            this.current = response.data.data.current_page\r\n            this.total = response.data.data.total\r\n            this.pageSize = response.data.data.per_page\r\n            return this.tableData\r\n          })\r\n        this.tableLoading = false\r\n      },\r\n      changePage (index) {\r\n        this.getData(index)\r\n      }\r\n    },\r\n    computed: {\r\n      tableColumns () {\r\n        let columns = [];\r\n        if (this.showCheckbox) {\r\n          columns.push({\r\n            type: 'selection',\r\n            width: 60,\r\n            align: 'center'\r\n          })\r\n        }\r\n        columns.push({\r\n          title: '日志ID',\r\n          key: 'id',\r\n          sortable: true\r\n        });\r\n        columns.push({\r\n          title: '用户名',\r\n          key: 'username',\r\n          tooltip: true,\r\n        });\r\n        columns.push({\r\n          title: '内容',\r\n          key: 'info',\r\n          width: 380,\r\n          tooltip: true,\r\n          render: (h, params) => {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"blue\"\r\n                    }\r\n                  },\r\n                  params.row.info\r\n                )\r\n              ]);\r\n          }\r\n        });\r\n        columns.push({\r\n          title: '请求类型',\r\n          key: 'method',\r\n          sortable: true,\r\n          filters: [\r\n          {\r\n            label: \"GET\",\r\n            value: \"GET\"\r\n          },\r\n          {\r\n            label: \"POST\",\r\n            value: \"POST\"\r\n          },\r\n          {\r\n            label: \"PUT\",\r\n            value: \"PUT\"\r\n          },\r\n          {\r\n            label: \"DELETE\",\r\n            value: \"DELETE\"\r\n          }\r\n        ],\r\n          filterMultiple: false,\r\n          filterMethod(value, row) {\r\n          if (value == \"GET\") {\r\n            return row.method == \"GET\";\r\n          } else if (value == \"POST\") {\r\n            return row.method == \"POST\";\r\n          } else if (value == \"PUT\") {\r\n            return row.method == \"PUT\";\r\n          } else if (value == \"DELETE\") {\r\n            return row.method == \"DELETE\";\r\n          }\r\n        }\r\n        });\r\n        columns.push({\r\n          title: '控制器',\r\n          key: 'controller'\r\n        });\r\n        columns.push({\r\n          title: '方法',\r\n          key: 'action'\r\n        });\r\n        columns.push({\r\n          title: '操作 IP',\r\n          key: 'created_ip',\r\n        });\r\n        // columns.push({\r\n        //   title: 'IP 地址',\r\n        //   key: 'ipInfo',\r\n        // });\r\n        columns.push({\r\n          title: '操作时间',\r\n          key: 'created_at',\r\n          sortable: true,\r\n        });\r\n        return columns;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/setting"}]}