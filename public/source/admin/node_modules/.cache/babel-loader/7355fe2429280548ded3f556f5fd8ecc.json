{"remainingRequest":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/home/donghai/Desktop/www/clover/public/source/admin/src/views/user/User.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/donghai/Desktop/www/clover/public/source/admin/src/views/user/User.vue","mtime":1574999402000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport avatar from '@/assets/img/avatar.png';\nexport default {\n  data: function data() {\n    return {\n      avatar: avatar,\n      tableData: [],\n      total: 0,\n      current: 0,\n      pageSize: 0,\n      showBorder: true,\n      showStripe: true,\n      showHeader: true,\n      showIndex: false,\n      showCheckbox: true,\n      fixedHeader: false,\n      tableSize: 'default'\n    };\n  },\n  created: function created() {\n    this.getData(1);\n  },\n  methods: {\n    gotoPage: function gotoPage(name) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.$router.push({\n        //核心语句\n        name: name,\n        //跳转的路径\n        query: params //跳转的参数\n\n      });\n    },\n    getData: function getData(page) {\n      var _this = this;\n\n      page = page > 0 ? page : 0;\n      this.$axios.get(this.api.user.list + '?page=' + page).then(function (response) {\n        _this.tableData = response.data.data.data;\n        _this.current = response.data.data.current_page;\n        _this.total = response.data.data.total;\n        _this.pageSize = response.data.data.per_page;\n        return _this.tableData;\n      });\n    },\n    show: function show(index) {},\n    remove: function remove(index) {// this.data6.splice(index, 1);\n    },\n    changePage: function changePage(index) {\n      this.tableData = this.getData(index);\n    }\n  },\n  computed: {\n    tableColumns: function tableColumns() {\n      var _this2 = this;\n\n      var columns = []; // if (this.showCheckbox) {\n      //   columns.push({\n      //     type: 'selection',\n      //     width: 60,\n      //     align: 'center'\n      //   })\n      // }\n\n      columns.push({\n        title: '用户 ID',\n        key: 'id',\n        sortable: true\n      });\n      columns.push({\n        title: '用户名',\n        key: 'username',\n        tooltip: true\n      });\n      columns.push({\n        title: '邮箱',\n        key: 'email',\n        tooltip: true\n      });\n      columns.push({\n        title: '手机',\n        key: 'mobile',\n        tooltip: true\n      });\n      columns.push({\n        title: '昵称',\n        key: 'nickname',\n        tooltip: true\n      });\n      columns.push({\n        title: '头像',\n        key: 'avatar',\n        render: function render(h, params) {\n          var row = params.row;\n          var avatar;\n\n          if (row.avatar.length > 0 && row.avatar.substr(0, 4).toLowerCase() == \"http\") {\n            avatar = row.avatar;\n          } else if (row.avatar.length > 0 && row.avatar.substr(0, 4).toLowerCase() != \"http\") {\n            avatar = _this2.api.static.baseUrl + row.avatar;\n          } else {\n            avatar = _this2.avatar;\n          }\n\n          return h('Avatar', {\n            props: {\n              icon: 'ios-person',\n              src: avatar,\n              shape: 'square' // size: 'small',\n\n            }\n          });\n        }\n      });\n      columns.push({\n        title: '状态',\n        key: 'status',\n        render: function render(h, params) {\n          var row = params.row;\n          var color = row.status === 1 ? 'success' : row.status === 2 ? 'warning' : 'error';\n          var text = row.status === 1 ? '正常' : row.status === 2 ? '禁用' : '未知';\n          return h('Tag', {\n            props: {\n              type: 'dot',\n              color: color\n            }\n          }, text);\n        }\n      });\n      columns.push({\n        title: '注册IP',\n        key: 'created_ip'\n      }); // columns.push({\n      //   title: 'IP 地址',\n      //   key: 'ipInfo',\n      // });\n\n      columns.push({\n        title: '注册时间',\n        key: 'created_at',\n        sortable: true\n      });\n      columns.push({\n        title: '操作',\n        key: 'action',\n        width: 150,\n        align: 'center',\n        render: function render(h, params) {\n          return h('div', [h('Button', {\n            props: {\n              type: 'primary',\n              size: 'small'\n            },\n            style: {\n              marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                _this2.gotoPage('adminUserView', {\n                  uid: params.row.id\n                });\n              }\n            }\n          }, '详情') // h('Button', {\n          //   props: {\n          //     type: 'error',\n          //     size: 'small',\n          //     disabled: 'disabled'\n          //   },\n          //   on: {\n          //     click: () => {\n          //     }\n          //   }\n          // }, '删除')\n          ]);\n        }\n      });\n      return columns;\n    }\n  }\n};",{"version":3,"sources":["User.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"content\">\r\n        <Table :border=\"showBorder\"\r\n               :stripe=\"showStripe\"\r\n               :show-header=\"showHeader\"\r\n               :height=\"fixedHeader ? 250 : ''\"\r\n               :size=\"tableSize\"\r\n               :data=\"tableData\"\r\n               :columns=\"tableColumns\"\r\n        >\r\n        </Table>\r\n        <div style=\"margin: 10px;overflow: hidden\">\r\n            <div style=\"float: right;\">\r\n                <Page :total=\"total\" :current=\"current\" :page-size=\"pageSize\" show-total show-elevator @on-change=\"changePage\"></Page>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport avatar from '@/assets/img/avatar.png'\r\n  export default {\r\n    data () {\r\n      return {\r\n        avatar:avatar,\r\n        tableData: [\r\n        ],\r\n        total: 0,\r\n        current: 0,\r\n        pageSize: 0,\r\n        showBorder: true,\r\n        showStripe: true,\r\n        showHeader: true,\r\n        showIndex: false,\r\n        showCheckbox: true,\r\n        fixedHeader: false,\r\n        tableSize: 'default'\r\n      }\r\n    },\r\n    created: function () {\r\n      this.getData(1)\r\n    },\r\n    methods: {\r\n      gotoPage: function(name, params = {}){\r\n        this.$router.push({  //核心语句\r\n          name:name,   //跳转的路径\r\n          query:params,   //跳转的参数\r\n        })\r\n      },\r\n      getData(page) {\r\n        page = page > 0 ? page : 0;\r\n        this.$axios.get(this.api.user.list + '?page=' + page)\r\n          .then((response) => {\r\n            this.tableData = response.data.data.data\r\n            this.current = response.data.data.current_page\r\n            this.total = response.data.data.total\r\n            this.pageSize = response.data.data.per_page\r\n            return this.tableData\r\n          })\r\n      },\r\n      show (index) {\r\n\r\n      },\r\n      remove (index) {\r\n        // this.data6.splice(index, 1);\r\n      },\r\n      changePage (index) {\r\n        this.tableData = this.getData(index);\r\n      }\r\n    },\r\n    computed: {\r\n      tableColumns () {\r\n        let columns = [];\r\n        // if (this.showCheckbox) {\r\n        //   columns.push({\r\n        //     type: 'selection',\r\n        //     width: 60,\r\n        //     align: 'center'\r\n        //   })\r\n        // }\r\n        columns.push({\r\n          title: '用户 ID',\r\n          key: 'id',\r\n          sortable: true\r\n        });\r\n        columns.push({\r\n          title: '用户名',\r\n          key: 'username',\r\n          tooltip: true\r\n        });\r\n        columns.push({\r\n          title: '邮箱',\r\n          key: 'email',\r\n          tooltip: true\r\n        });\r\n        columns.push({\r\n          title: '手机',\r\n          key: 'mobile',\r\n          tooltip: true\r\n        });\r\n        columns.push({\r\n          title: '昵称',\r\n          key: 'nickname',\r\n          tooltip: true\r\n        });\r\n        columns.push({\r\n          title: '头像',\r\n          key: 'avatar',\r\n          render: (h, params) => {\r\n            const row = params.row;\r\n            var avatar\r\n            if (row.avatar.length > 0 && row.avatar.substr(0,4).toLowerCase() == \"http\" )\r\n            {\r\n              avatar = row.avatar;\r\n            }else if(row.avatar.length > 0 && row.avatar.substr(0,4).toLowerCase() != \"http\")\r\n            {\r\n              avatar = this.api.static.baseUrl + row.avatar;\r\n            }else\r\n            {\r\n              avatar = this.avatar\r\n            }\r\n\r\n            return h('Avatar', {\r\n              props: {\r\n                icon: 'ios-person',\r\n                src: avatar,\r\n                shape: 'square',\r\n                // size: 'small',\r\n              }\r\n            });\r\n          }\r\n        });\r\n        columns.push({\r\n          title: '状态',\r\n          key: 'status',\r\n          render: (h, params) => {\r\n            const row = params.row;\r\n            const color = row.status === 1 ? 'success' : row.status === 2 ? 'warning' : 'error';\r\n            const text = row.status === 1 ? '正常' : row.status === 2 ? '禁用' : '未知';\r\n\r\n            return h('Tag', {\r\n              props: {\r\n                type: 'dot',\r\n                color: color\r\n              }\r\n            }, text);\r\n          }\r\n        });\r\n        columns.push({\r\n          title: '注册IP',\r\n          key: 'created_ip',\r\n        });\r\n        // columns.push({\r\n        //   title: 'IP 地址',\r\n        //   key: 'ipInfo',\r\n        // });\r\n        columns.push({\r\n          title: '注册时间',\r\n          key: 'created_at',\r\n          sortable: true,\r\n        });\r\n        columns.push({\r\n          title: '操作',\r\n          key: 'action',\r\n          width: 150,\r\n          align: 'center',\r\n          render: (h, params) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  type: 'primary',\r\n                  size: 'small',\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.gotoPage('adminUserView',{\r\n                      uid:params.row.id\r\n                    })\r\n                  }\r\n                }\r\n              }, '详情'),\r\n              // h('Button', {\r\n              //   props: {\r\n              //     type: 'error',\r\n              //     size: 'small',\r\n              //     disabled: 'disabled'\r\n              //   },\r\n              //   on: {\r\n              //     click: () => {\r\n              //     }\r\n              //   }\r\n              // }, '删除')\r\n            ]);\r\n          }\r\n        });\r\n        return columns;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/user"}]}