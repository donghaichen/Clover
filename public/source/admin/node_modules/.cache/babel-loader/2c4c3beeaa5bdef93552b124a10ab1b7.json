{"remainingRequest":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/home/donghai/Desktop/www/clover/public/source/admin/src/views/setting/AdminUserView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/donghai/Desktop/www/clover/public/source/admin/src/views/setting/AdminUserView.vue","mtime":1574999408000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      file_size: JSON.parse(localStorage.getItem('config')).file_size,\n      isUpdate: false,\n      isAdmin: true,\n      adminUid: 1,\n      uid: 0,\n      uploadUrl: this.api.common.upload,\n      formItem: {\n        // id: 0,\n        username: '',\n        mobile: '',\n        password: '',\n        nickname: '',\n        email: '',\n        is_admin: 1,\n        url: '',\n        avatar: '',\n        desc: '',\n        status: '1'\n      },\n      ruleValidate: {\n        username: [{\n          required: true,\n          message: '用户名不能为空',\n          trigger: 'blur'\n        }, {\n          type: 'string',\n          min: 2,\n          message: '用户名必须大于 2 个字',\n          trigger: 'blur'\n        }, {\n          type: 'string',\n          max: 50,\n          message: '用户名必须小于 50 个字',\n          trigger: 'blur'\n        }, {\n          type: \"string\",\n          pattern: /^[a-zA-Z0-9]+$/,\n          message: '用户名不能包含特殊字符和中文',\n          trigger: 'blur'\n        }],\n        mobile: [{\n          required: true,\n          message: '手机号不能为空',\n          trigger: 'blur'\n        }, {\n          type: 'string',\n          min: 11,\n          message: '手机必须手机 11 个字',\n          trigger: 'blur'\n        }, {\n          type: 'string',\n          max: 11,\n          message: '手机必须手机 11 个字',\n          trigger: 'blur'\n        }],\n        nickname: [{\n          type: 'string',\n          min: 2,\n          message: '昵称必须大于 2 个字',\n          trigger: 'blur'\n        }, {\n          type: 'string',\n          max: 50,\n          message: '昵称必须小于 50 个字',\n          trigger: 'blur'\n        }],\n        password: [// { required: true, message: '密码不能为空', trigger: 'blur' },\n        {\n          type: 'string',\n          min: 5,\n          message: '密码必须大于 5 个字',\n          trigger: 'blur'\n        }, {\n          type: 'string',\n          max: 25,\n          message: '密码必须小于 25 个字',\n          trigger: 'blur'\n        }],\n        email: [{\n          type: 'email',\n          message: '邮箱格式错误',\n          trigger: 'blur'\n        }],\n        url: [{\n          type: 'url',\n          message: '个人主页格式错误',\n          trigger: 'blur'\n        }],\n        desc: [{\n          type: 'string',\n          min: 2,\n          message: '个人简介必须大于 2 个字',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.uploadUrl = this.uploadUrl + '?module=user';\n\n    if (this.$route.params.uid == localStorage.getItem('uid')) {\n      this.isUpdate = true;\n      this.isAdmin = false;\n    }\n\n    if (localStorage.getItem('uid') == 1) {\n      this.isUpdate = true;\n    }\n\n    var url = this.api.user.view;\n\n    if (this.$route.params.uid > 0) {\n      var uid = this.$route.params.uid;\n      this.$axios.get(url + '/' + uid).then(function (response) {\n        if (response.data.code == 0) {\n          _this.formItem = response.data.data;\n        } else {\n          _this.$Message.error('数据获取失败，请检查');\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    if (this.$route.params.uid > 0) {\n      var uid = this.$route.params.uid;\n      this.uid = uid;\n    }\n  },\n  watch: {\n    //@todo 在编辑个人资料页面点击右上角个人资料uid不改变\n    uid: function uid(old, newd) {\n      window.console.log(old);\n      window.console.log(newd);\n    }\n  },\n  methods: {\n    viewPic: function viewPic(src) {\n      if (src.length <= 0) {\n        this.$Message.error('尚未上传图片，无法查看');\n        return false;\n      }\n\n      if (src.substr(0, 4).toLowerCase() != \"http\") {\n        src = this.api.static.baseUrl + src;\n      }\n\n      var title = '查看图片';\n      var content = '<img style=\"width: 88%\" src=\"' + src + '\">';\n      this.$Modal.info({\n        title: title,\n        content: content\n      });\n    },\n    handleSuccess: function handleSuccess(response) {\n      this.formItem.avatar = response.data.url;\n      this.$Message.success('上传成功');\n    },\n    handleError: function handleError(event) {\n      window.console.log(event);\n      this.$Message.error('上传错误，请重新上传');\n    },\n    handleFormatError: function handleFormatError(file) {\n      this.$Notice.warning({\n        title: '文件格式错误',\n        desc: '文件： ' + file.name + ' 格式错误, 请上传允许的文件.'\n      });\n    },\n    handleMaxSize: function handleMaxSize(file) {\n      this.$Notice.warning({\n        title: '文件大小超过限制',\n        desc: '文件：  ' + file.name + ' 不超过' + this.file_size + 'M'\n      });\n    },\n    query: function query(data) {\n      var _this2 = this;\n\n      var url = this.api.user.view;\n      this.$axios.post(url, data).then(function (response) {\n        if (response.data.code == 0) {\n          _this2.$Message.success('操作成功');\n        } else {\n          _this2.$Message.error(response.data.msg);\n        }\n      });\n    },\n    gotoPage: function gotoPage(name) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.$router.push({\n        //核心语句\n        name: name,\n        //跳转的路径\n        query: params //跳转的参数\n\n      });\n    },\n    handleSubmit: function handleSubmit(name) {\n      var _this3 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          var url = _this3.api.user.save;\n\n          _this3.$axios.post(url, _this3.formItem).then(function (response) {\n            if (response.data.code == 0) {\n              _this3.$Message.success('操作成功');\n\n              setTimeout(function () {\n                _this3.gotoPage('adminUser');\n              }, 1000);\n            } else {\n              _this3.$Message.error(response.data.msg);\n            }\n          });\n        } else {\n          _this3.$Message.error('请正确输入表单内容');\n        }\n      });\n    },\n    handleReset: function handleReset(name) {\n      this.$refs[name].resetFields();\n    }\n  }\n};",{"version":3,"sources":["AdminUserView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"content\">\r\n        <Card :bordered=\"false\">\r\n            <p slot=\"title\">\r\n            </p>\r\n            <Form ref=\"formItem\" :model=\"formItem\" :rules=\"ruleValidate\" :label-width=\"80\">\r\n                <Alert type=\"error\" show-icon  v-if=\"isUpdate === false\">\r\n                    您没有权限编辑此页面\r\n                    <span slot=\"desc\">只有超级用户 admin 有新建用户和编辑其他用户权限，其他用户只允许编辑自己资料</span>\r\n                </Alert>\r\n                <FormItem label=\"用户名\" prop=\"username\">\r\n                    <Input v-model=\"formItem.username\" placeholder=\"用户名用来登录，不能包含特殊字符和中文\"></Input>\r\n                </FormItem>\r\n                <FormItem label=\"密码\" prop=\"password\">\r\n                    <Input type=\"password\" v-model=\"formItem.password\" placeholder=\"请输入密码\"></Input>\r\n                    <p>创建用户，密码必填</p>\r\n                    <p>编辑用户，密码不填则为不修改</p>\r\n                </FormItem>\r\n                <FormItem label=\"昵称\" prop=\"nickname\">\r\n                    <Input v-model=\"formItem.nickname\" placeholder=\"请输入昵称\"></Input>\r\n                </FormItem>\r\n                <FormItem label=\"手机\" prop=\"mobile\">\r\n                    <Input v-model=\"formItem.mobile\" placeholder=\"请输入 手机号码\"></Input>\r\n                </FormItem>\r\n                <FormItem label=\"Email\" prop=\"email\">\r\n                    <Input v-model=\"formItem.email\" placeholder=\"请输入 Email\"></Input>\r\n                </FormItem>\r\n                <FormItem label=\"个人主页\" prop=\"url\">\r\n                    <Input v-model=\"formItem.url\" placeholder=\"请输入个人主页\"></Input>\r\n                </FormItem>\r\n                <FormItem label=\"头像\" prop=\"avatar\">\r\n                    <Input v-model=\"formItem.avatar\" disabled placeholder=\"请上传头像\"></Input>\r\n                    <p class=\"desc\">支持上传的文件格式为 jpg·jpeg·png·gif 且文件大小不超过 {{file_size}} M</p>\r\n                    <Upload v-if=\"isUpdate\"\r\n                            ref=\"upload\"\r\n                            :show-upload-list=\"false\"\r\n                            :on-success=\"handleSuccess\"\r\n                            :on-error=\"handleError\"\r\n                            :max-size=\"file_size * 1024\"\r\n                            :on-format-error=\"handleFormatError\"\r\n                            :on-exceeded-size=\"handleMaxSize\"\r\n                            :format=\"['jpg','jpeg','png', 'gif']\"\r\n                            :action=\"uploadUrl\">\r\n                        <Button icon=\"ios-cloud-upload-outline\">上传</Button>\r\n                    </Upload>\r\n                    <Button v-if=\"isUpdate\" style=\"margin-left: 100px;margin-top: -68px;\" @click=\"viewPic(formItem.avatar)\">查看图片</Button>\r\n                </FormItem>\r\n                <FormItem label=\"个人简介\" prop=\"desc\">\r\n                    <Input v-model=\"formItem.desc\" type=\"textarea\" :autosize=\"{minRows: 2,maxRows: 5}\" placeholder=\"请输入个人简介\"></Input>\r\n                </FormItem>\r\n                <FormItem label=\"状态\" prop=\"status\"  v-if=\"isAdmin\">\r\n                    <RadioGroup v-model=\"formItem.status\">\r\n                        <Radio label=\"1\">启用</Radio>\r\n                        <Radio label=\"2\">禁用</Radio>\r\n                    </RadioGroup>\r\n                </FormItem>\r\n                <FormItem v-if=\"isUpdate\">\r\n                    <FormItem>\r\n                        <Button type=\"primary\" @click=\"handleSubmit('formItem')\">保存</Button>\r\n                        <Button @click=\"handleReset('formItem')\" style=\"margin-left: 8px\">重置</Button>\r\n                    </FormItem>\r\n                </FormItem>\r\n            </Form>\r\n        </Card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data () {\r\n      return {\r\n        file_size: JSON.parse(localStorage.getItem('config')).file_size,\r\n        isUpdate: false,\r\n        isAdmin: true,\r\n        adminUid: 1,\r\n        uid: 0,\r\n        uploadUrl: this.api.common.upload,\r\n        formItem: {\r\n          // id: 0,\r\n          username: '',\r\n          mobile: '',\r\n          password: '',\r\n          nickname: '',\r\n          email: '',\r\n          is_admin: 1,\r\n          url: '',\r\n          avatar: '',\r\n          desc: '',\r\n          status: '1',\r\n\r\n        },\r\n        ruleValidate: {\r\n          username: [\r\n            { required: true, message: '用户名不能为空', trigger: 'blur' },\r\n            { type: 'string', min: 2, message: '用户名必须大于 2 个字', trigger: 'blur' },\r\n            { type: 'string', max: 50, message: '用户名必须小于 50 个字', trigger: 'blur' },\r\n            { type: \"string\", pattern: /^[a-zA-Z0-9]+$/, message: '用户名不能包含特殊字符和中文', trigger: 'blur' }\r\n          ],\r\n          mobile: [\r\n            { required: true, message: '手机号不能为空', trigger: 'blur' },\r\n            { type: 'string', min: 11, message: '手机必须手机 11 个字', trigger: 'blur' },\r\n            { type: 'string', max: 11, message: '手机必须手机 11 个字', trigger: 'blur' }\r\n          ],\r\n          nickname: [\r\n            { type: 'string', min: 2, message: '昵称必须大于 2 个字', trigger: 'blur' },\r\n            { type: 'string', max: 50, message: '昵称必须小于 50 个字', trigger: 'blur' }\r\n          ],\r\n          password: [\r\n            // { required: true, message: '密码不能为空', trigger: 'blur' },\r\n            { type: 'string', min: 5, message: '密码必须大于 5 个字', trigger: 'blur' },\r\n            { type: 'string', max: 25, message: '密码必须小于 25 个字', trigger: 'blur' }\r\n          ],\r\n          email: [\r\n            { type: 'email', message: '邮箱格式错误', trigger: 'blur' }\r\n          ],\r\n          url: [\r\n            { type: 'url', message: '个人主页格式错误', trigger: 'blur' }\r\n          ],\r\n          desc: [\r\n            { type: 'string', min: 2, message: '个人简介必须大于 2 个字', trigger: 'blur' }\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.uploadUrl = this.uploadUrl + '?module=user'\r\n      if (this.$route.params.uid == localStorage.getItem('uid'))\r\n      {\r\n        this.isUpdate = true\r\n        this.isAdmin = false\r\n      }\r\n      if (localStorage.getItem('uid') == 1)\r\n      {\r\n        this.isUpdate = true\r\n      }\r\n      var url = this.api.user.view;\r\n      if (this.$route.params.uid > 0)\r\n      {\r\n        var uid = this.$route.params.uid\r\n        this.$axios.get(url + '/' + uid)\r\n          .then((response) => {\r\n            if (response.data.code == 0)\r\n            {\r\n              this.formItem = response.data.data\r\n            }else{\r\n              this.$Message.error('数据获取失败，请检查');\r\n            }\r\n          })\r\n      }\r\n    },\r\n    mounted() {\r\n      if (this.$route.params.uid > 0) {\r\n        var uid = this.$route.params.uid\r\n        this.uid = uid\r\n      }\r\n    },\r\n    watch: {\r\n      //@todo 在编辑个人资料页面点击右上角个人资料uid不改变\r\n      uid:function(old,newd){\r\n        window.console.log(old)\r\n        window.console.log(newd)\r\n      }\r\n    },\r\n    methods: {\r\n      viewPic (src) {\r\n        if(src.length <= 0)\r\n        {\r\n          this.$Message.error('尚未上传图片，无法查看')\r\n          return false\r\n        }\r\n        if(src.substr(0,4).toLowerCase() != \"http\")\r\n        {\r\n          src = this.api.static.baseUrl + src;\r\n        }\r\n        const title = '查看图片';\r\n        const content = '<img style=\"width: 88%\" src=\"' + src +'\">';\r\n            this.$Modal.info({\r\n              title: title,\r\n              content: content\r\n            });\r\n      },\r\n      handleSuccess (response) {\r\n        this.formItem.avatar = response.data.url\r\n        this.$Message.success('上传成功')\r\n      },\r\n      handleError (event) {\r\n        window.console.log(event)\r\n        this.$Message.error('上传错误，请重新上传')\r\n\r\n      },\r\n      handleFormatError (file) {\r\n        this.$Notice.warning({\r\n          title: '文件格式错误',\r\n          desc: '文件： ' + file.name + ' 格式错误, 请上传允许的文件.'\r\n        });\r\n      },\r\n      handleMaxSize (file) {\r\n        this.$Notice.warning({\r\n          title: '文件大小超过限制',\r\n          desc: '文件：  ' + file.name + ' 不超过' +  this.file_size + 'M'\r\n        });\r\n      },\r\n      query(data) {\r\n        var url = this.api.user.view;\r\n        this.$axios.post(url, data)\r\n          .then((response) => {\r\n            if (response.data.code == 0)\r\n            {\r\n              this.$Message.success('操作成功');\r\n            }else{\r\n              this.$Message.error(response.data.msg);\r\n            }\r\n          })\r\n      },\r\n      gotoPage: function(name, params = {}){\r\n        this.$router.push({  //核心语句\r\n          name:name,   //跳转的路径\r\n          query:params,   //跳转的参数\r\n        })\r\n      },\r\n      handleSubmit (name) {\r\n        this.$refs[name].validate((valid) => {\r\n          if (valid) {\r\n            var url = this.api.user.save;\r\n            this.$axios.post(url, this.formItem)\r\n              .then((response) => {\r\n                if (response.data.code == 0)\r\n                {\r\n                  this.$Message.success('操作成功');\r\n                  setTimeout(() => {\r\n                    this.gotoPage('adminUser')\r\n                  }, 1000)\r\n                }else{\r\n                  this.$Message.error(response.data.msg);\r\n                }\r\n              })\r\n          } else {\r\n            this.$Message.error('请正确输入表单内容');\r\n          }\r\n        })\r\n      },\r\n      handleReset (name) {\r\n        this.$refs[name].resetFields();\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/views/setting"}]}