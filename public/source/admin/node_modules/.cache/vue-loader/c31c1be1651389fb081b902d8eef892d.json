{"remainingRequest":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/home/donghai/Desktop/www/clover/public/source/admin/src/views/category/Category.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/donghai/Desktop/www/clover/public/source/admin/src/views/category/Category.vue","mtime":1574999409000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data () {\n    return {\n      is_tip: true,\n      categoryName: '',\n      index: '',\n      modal2: false,\n      modal_loading: false,\n      tableData: [\n      ],\n      total: 0,\n      current: 0,\n      pageSize: 0,\n      showBorder: true,\n      showStripe: true,\n      showHeader: true,\n      showIndex: false,\n      showCheckbox: true,\n      fixedHeader: false,\n      tableSize: 'default'\n    }\n  },\n  created: function () {\n    this.getData()\n    window.console.log(localStorage.getItem('is_tip'))\n    this.is_tip = localStorage.getItem('is_tip') === null ? true : localStorage.getItem('is_tip')\n    window.console.log(this.is_tip)\n  },\n  methods: {\n    sort(id, sort) {\n      this.$axios.put(this.api.category.sort + '/' + id,\n      {\n        sort: sort\n      })\n        .then((response) => {\n          if (response.data.code == 0)\n          {\n            this.$Message.success('排序成功');\n            this.getData()\n          }else{\n            this.$Message.error(response.data.msg);\n          }\n        })\n    },\n    close () {\n      alert('关闭提示信息后会在以后很长一段时间不再提示您')\n      this.is_tip = false\n      localStorage.setItem('is_tip', false)\n    },\n    handleSubmit (name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          this.$Message.success('Success!');\n        } else {\n          this.$Message.error('Fail!');\n        }\n      })\n    },\n    handleReset (name) {\n      this.$refs[name].resetFields();\n    },\n    getData() {\n      this.$axios.get(this.api.category.list)\n        .then((response) => {\n          this.tableData = response.data.data\n        })\n    },\n    gotoPage: function(name, params = {}){\n      this.$router.push({  //核心语句\n        name:name,   //跳转的路径\n        query:params,   //跳转的参数\n      })\n    },\n    del () {\n      this.modal_loading = true;\n      setTimeout(() => {\n        this.modal_loading = false;\n        this.modal2 = false;\n      }, 1000);\n      this.$axios.delete(this.api.category.remove + '/' + this.index.row.id)\n        .then((response) => {\n          if (response.data.code == 0)\n          {\n            this.$Message.success('删除成功');\n            this.getData()\n          }else{\n            this.$Message.error(response.data.msg);\n          }\n        })\n    },\n    remove (index) {\n      this.modal2 = true;\n      this.categoryName = index.row.id\n      this.index = index\n    },\n    changePage (index) {\n      this.tableData = this.getData(index);\n    }\n  },\n  computed: {\n    tableColumns () {\n      let columns = [];\n      if (this.showCheckbox) {\n        columns.push({\n          type: 'selection',\n          width: 60,\n          align: 'center'\n        })\n      }\n      columns.push({\n        title: '栏目 ID',\n        key: 'id',\n      });\n      columns.push({\n        title: '名称',\n        key: 'name',\n        tooltip: true\n      });\n      columns.push({\n        title: '排序',\n        key: 'sort',\n        width: 150,\n        tooltip: true,\n        render: (h, params) => {\n          let row = params.row;\n          let sort = row.sort\n          return h('Input', {\n            props: {\n              type: 'number',\n              value: sort,\n              // icon: \"ios-clock-outline\"\n            },\n            on: {\n              \"on-blur\": (e) => {\n                this.sort(row.id, e.target.value)\n              }\n            }\n          });\n        }\n      });\n      columns.push({\n        title: '状态',\n        key: 'is_show',\n        render: (h, params) => {\n          const row = params.row;\n          const color = row.is_show === 1 ? 'success' : 'error';\n          const text = row.is_show === 1 ? '启用' : '禁用';\n\n          return h('Tag', {\n            props: {\n              type: 'dot',\n              color: color\n            }\n          }, text);\n        }\n      });\n      columns.push({\n        title: '操作',\n        key: 'action',\n        width: 150,\n        align: 'center',\n        render: (h, params) => {\n          return h('div', [\n            h('Button', {\n              props: {\n                type: 'primary',\n                size: 'small',\n              },\n              style: {\n                marginRight: '5px'\n              },\n              on: {\n                click: () => {\n                  this.gotoPage('categoryView',{\n                    id:params.row.id\n                  })\n                }\n              }\n            }, '详情'),\n            h('Button', {\n              props: {\n                type: 'error',\n                size: 'small',\n              },\n              on: {\n                click: () => {\n                  this.remove(params)\n                }\n              }\n            }, '删除')\n          ]);\n        }\n      });\n      return columns;\n    }\n  }\n}\n",{"version":3,"sources":["Category.vue"],"names":[],"mappingsfile":"Category.vue","sourceRoot":"src/views/category","sourcesContent":["<template>\r\n    <div class=\"content\">\r\n        <Card :bordered=\"false\" style=\"margin-bottom: 20px\">\r\n            <h1><router-link :to=\"{name: 'categoryView'}\"><Button type=\"primary\">新建</Button></router-link></h1>\r\n            <Alert v-if=\"is_tip === true\" closable type=\"success\" @on-close=\"close\">排序按照阿拉伯数字 ASC 升序排序，数字越小排序越靠前</Alert>\r\n            <Table :border=\"showBorder\"\r\n                   :stripe=\"showStripe\"\r\n                   :show-header=\"showHeader\"\r\n                   :height=\"fixedHeader ? 250 : ''\"\r\n                   :size=\"tableSize\"\r\n                   :data=\"tableData\"\r\n                   :columns=\"tableColumns\"\r\n            >\r\n            </Table>\r\n            <Modal v-model=\"modal2\" width=\"360\">\r\n                <p slot=\"header\" style=\"color:#f60;text-align:center\">\r\n                    <Icon type=\"ios-information-circle\"></Icon>\r\n                    <span>确认对话框</span>\r\n                </p>\r\n                <div style=\"text-align:center\">\r\n                    <p>栏目（ ID ：{{categoryName}} ） 删除之后无法恢复。</p>\r\n                    <p>是否确认删除？</p>\r\n                </div>\r\n                <div slot=\"footer\">\r\n                    <Button type=\"error\" size=\"large\" long :loading=\"modal_loading\" @click=\"del\">确认</Button>\r\n                </div>\r\n            </Modal>\r\n        </Card>\r\n    </div>\r\n</template>\r\n<script>\r\n  export default {\r\n    data () {\r\n      return {\r\n        is_tip: true,\r\n        categoryName: '',\r\n        index: '',\r\n        modal2: false,\r\n        modal_loading: false,\r\n        tableData: [\r\n        ],\r\n        total: 0,\r\n        current: 0,\r\n        pageSize: 0,\r\n        showBorder: true,\r\n        showStripe: true,\r\n        showHeader: true,\r\n        showIndex: false,\r\n        showCheckbox: true,\r\n        fixedHeader: false,\r\n        tableSize: 'default'\r\n      }\r\n    },\r\n    created: function () {\r\n      this.getData()\r\n      window.console.log(localStorage.getItem('is_tip'))\r\n      this.is_tip = localStorage.getItem('is_tip') === null ? true : localStorage.getItem('is_tip')\r\n      window.console.log(this.is_tip)\r\n    },\r\n    methods: {\r\n      sort(id, sort) {\r\n        this.$axios.put(this.api.category.sort + '/' + id,\r\n        {\r\n          sort: sort\r\n        })\r\n          .then((response) => {\r\n            if (response.data.code == 0)\r\n            {\r\n              this.$Message.success('排序成功');\r\n              this.getData()\r\n            }else{\r\n              this.$Message.error(response.data.msg);\r\n            }\r\n          })\r\n      },\r\n      close () {\r\n        alert('关闭提示信息后会在以后很长一段时间不再提示您')\r\n        this.is_tip = false\r\n        localStorage.setItem('is_tip', false)\r\n      },\r\n      handleSubmit (name) {\r\n        this.$refs[name].validate((valid) => {\r\n          if (valid) {\r\n            this.$Message.success('Success!');\r\n          } else {\r\n            this.$Message.error('Fail!');\r\n          }\r\n        })\r\n      },\r\n      handleReset (name) {\r\n        this.$refs[name].resetFields();\r\n      },\r\n      getData() {\r\n        this.$axios.get(this.api.category.list)\r\n          .then((response) => {\r\n            this.tableData = response.data.data\r\n          })\r\n      },\r\n      gotoPage: function(name, params = {}){\r\n        this.$router.push({  //核心语句\r\n          name:name,   //跳转的路径\r\n          query:params,   //跳转的参数\r\n        })\r\n      },\r\n      del () {\r\n        this.modal_loading = true;\r\n        setTimeout(() => {\r\n          this.modal_loading = false;\r\n          this.modal2 = false;\r\n        }, 1000);\r\n        this.$axios.delete(this.api.category.remove + '/' + this.index.row.id)\r\n          .then((response) => {\r\n            if (response.data.code == 0)\r\n            {\r\n              this.$Message.success('删除成功');\r\n              this.getData()\r\n            }else{\r\n              this.$Message.error(response.data.msg);\r\n            }\r\n          })\r\n      },\r\n      remove (index) {\r\n        this.modal2 = true;\r\n        this.categoryName = index.row.id\r\n        this.index = index\r\n      },\r\n      changePage (index) {\r\n        this.tableData = this.getData(index);\r\n      }\r\n    },\r\n    computed: {\r\n      tableColumns () {\r\n        let columns = [];\r\n        if (this.showCheckbox) {\r\n          columns.push({\r\n            type: 'selection',\r\n            width: 60,\r\n            align: 'center'\r\n          })\r\n        }\r\n        columns.push({\r\n          title: '栏目 ID',\r\n          key: 'id',\r\n        });\r\n        columns.push({\r\n          title: '名称',\r\n          key: 'name',\r\n          tooltip: true\r\n        });\r\n        columns.push({\r\n          title: '排序',\r\n          key: 'sort',\r\n          width: 150,\r\n          tooltip: true,\r\n          render: (h, params) => {\r\n            let row = params.row;\r\n            let sort = row.sort\r\n            return h('Input', {\r\n              props: {\r\n                type: 'number',\r\n                value: sort,\r\n                // icon: \"ios-clock-outline\"\r\n              },\r\n              on: {\r\n                \"on-blur\": (e) => {\r\n                  this.sort(row.id, e.target.value)\r\n                }\r\n              }\r\n            });\r\n          }\r\n        });\r\n        columns.push({\r\n          title: '状态',\r\n          key: 'is_show',\r\n          render: (h, params) => {\r\n            const row = params.row;\r\n            const color = row.is_show === 1 ? 'success' : 'error';\r\n            const text = row.is_show === 1 ? '启用' : '禁用';\r\n\r\n            return h('Tag', {\r\n              props: {\r\n                type: 'dot',\r\n                color: color\r\n              }\r\n            }, text);\r\n          }\r\n        });\r\n        columns.push({\r\n          title: '操作',\r\n          key: 'action',\r\n          width: 150,\r\n          align: 'center',\r\n          render: (h, params) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  type: 'primary',\r\n                  size: 'small',\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.gotoPage('categoryView',{\r\n                      id:params.row.id\r\n                    })\r\n                  }\r\n                }\r\n              }, '详情'),\r\n              h('Button', {\r\n                props: {\r\n                  type: 'error',\r\n                  size: 'small',\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.remove(params)\r\n                  }\r\n                }\r\n              }, '删除')\r\n            ]);\r\n          }\r\n        });\r\n        return columns;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}