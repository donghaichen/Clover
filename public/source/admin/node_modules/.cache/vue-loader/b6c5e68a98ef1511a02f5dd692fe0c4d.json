{"remainingRequest":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/home/donghai/Desktop/www/clover/public/source/admin/src/views/setting/Log.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/donghai/Desktop/www/clover/public/source/admin/src/views/setting/Log.vue","mtime":1574999409000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data () {\n    return {\n      tableLoading: true,\n      tableData: [\n      ],\n      total: 0,\n      current: 0,\n      pageSize: 0,\n      showBorder: true,\n      showStripe: true,\n      showHeader: true,\n      showIndex: false,\n      showCheckbox: false,\n      fixedHeader: false,\n      tableSize: 'default'\n    }\n  },\n  created: function () {\n    this.tableData = this.getData(1)\n  },\n  methods: {\n    getData(page) {\n      this.tableLoading = true\n      page = page > 0 ? page : 0;\n      this.$axios.get(this.api.log.admin + '?page=' + page)\n        .then((response) => {\n          this.tableData = response.data.data.data\n          this.current = response.data.data.current_page\n          this.total = response.data.data.total\n          this.pageSize = response.data.data.per_page\n          return this.tableData\n        })\n      this.tableLoading = false\n    },\n    changePage (index) {\n      this.getData(index)\n    }\n  },\n  computed: {\n    tableColumns () {\n      let columns = [];\n      if (this.showCheckbox) {\n        columns.push({\n          type: 'selection',\n          width: 60,\n          align: 'center'\n        })\n      }\n      columns.push({\n        title: '日志ID',\n        key: 'id',\n        sortable: true\n      });\n      columns.push({\n        title: '用户名',\n        key: 'username',\n        tooltip: true,\n      });\n      columns.push({\n        title: '内容',\n        key: 'info',\n        width: 380,\n        tooltip: true,\n        render: (h, params) => {\n            return h(\"div\", [\n              h(\n                \"Tag\",\n                {\n                  props: {\n                    color: \"blue\"\n                  }\n                },\n                params.row.info\n              )\n            ]);\n        }\n      });\n      columns.push({\n        title: '请求类型',\n        key: 'method',\n        sortable: true,\n        filters: [\n        {\n          label: \"GET\",\n          value: \"GET\"\n        },\n        {\n          label: \"POST\",\n          value: \"POST\"\n        },\n        {\n          label: \"PUT\",\n          value: \"PUT\"\n        },\n        {\n          label: \"DELETE\",\n          value: \"DELETE\"\n        }\n      ],\n        filterMultiple: false,\n        filterMethod(value, row) {\n        if (value == \"GET\") {\n          return row.method == \"GET\";\n        } else if (value == \"POST\") {\n          return row.method == \"POST\";\n        } else if (value == \"PUT\") {\n          return row.method == \"PUT\";\n        } else if (value == \"DELETE\") {\n          return row.method == \"DELETE\";\n        }\n      }\n      });\n      columns.push({\n        title: '控制器',\n        key: 'controller'\n      });\n      columns.push({\n        title: '方法',\n        key: 'action'\n      });\n      columns.push({\n        title: '操作 IP',\n        key: 'created_ip',\n      });\n      // columns.push({\n      //   title: 'IP 地址',\n      //   key: 'ipInfo',\n      // });\n      columns.push({\n        title: '操作时间',\n        key: 'created_at',\n        sortable: true,\n      });\n      return columns;\n    }\n  }\n}\n",{"version":3,"sources":["Log.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsfile":"Log.vue","sourceRoot":"src/views/setting","sourcesContent":["<template>\r\n    <div class=\"content\">\r\n        <Table\r\n                :loading=\"tableLoading\"\r\n                :border=\"showBorder\"\r\n               :stripe=\"showStripe\"\r\n               :show-header=\"showHeader\"\r\n               :height=\"fixedHeader ? 250 : ''\"\r\n               :size=\"tableSize\"\r\n               :data=\"tableData\"\r\n               :columns=\"tableColumns\"\r\n        >\r\n        </Table>\r\n        <div style=\"margin: 10px;overflow: hidden\">\r\n            <div style=\"float: right;\">\r\n                <Page :total=\"total\" :current=\"current\" :page-size=\"pageSize\" show-total show-elevator @on-change=\"changePage\"></Page>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data () {\r\n      return {\r\n        tableLoading: true,\r\n        tableData: [\r\n        ],\r\n        total: 0,\r\n        current: 0,\r\n        pageSize: 0,\r\n        showBorder: true,\r\n        showStripe: true,\r\n        showHeader: true,\r\n        showIndex: false,\r\n        showCheckbox: false,\r\n        fixedHeader: false,\r\n        tableSize: 'default'\r\n      }\r\n    },\r\n    created: function () {\r\n      this.tableData = this.getData(1)\r\n    },\r\n    methods: {\r\n      getData(page) {\r\n        this.tableLoading = true\r\n        page = page > 0 ? page : 0;\r\n        this.$axios.get(this.api.log.admin + '?page=' + page)\r\n          .then((response) => {\r\n            this.tableData = response.data.data.data\r\n            this.current = response.data.data.current_page\r\n            this.total = response.data.data.total\r\n            this.pageSize = response.data.data.per_page\r\n            return this.tableData\r\n          })\r\n        this.tableLoading = false\r\n      },\r\n      changePage (index) {\r\n        this.getData(index)\r\n      }\r\n    },\r\n    computed: {\r\n      tableColumns () {\r\n        let columns = [];\r\n        if (this.showCheckbox) {\r\n          columns.push({\r\n            type: 'selection',\r\n            width: 60,\r\n            align: 'center'\r\n          })\r\n        }\r\n        columns.push({\r\n          title: '日志ID',\r\n          key: 'id',\r\n          sortable: true\r\n        });\r\n        columns.push({\r\n          title: '用户名',\r\n          key: 'username',\r\n          tooltip: true,\r\n        });\r\n        columns.push({\r\n          title: '内容',\r\n          key: 'info',\r\n          width: 380,\r\n          tooltip: true,\r\n          render: (h, params) => {\r\n              return h(\"div\", [\r\n                h(\r\n                  \"Tag\",\r\n                  {\r\n                    props: {\r\n                      color: \"blue\"\r\n                    }\r\n                  },\r\n                  params.row.info\r\n                )\r\n              ]);\r\n          }\r\n        });\r\n        columns.push({\r\n          title: '请求类型',\r\n          key: 'method',\r\n          sortable: true,\r\n          filters: [\r\n          {\r\n            label: \"GET\",\r\n            value: \"GET\"\r\n          },\r\n          {\r\n            label: \"POST\",\r\n            value: \"POST\"\r\n          },\r\n          {\r\n            label: \"PUT\",\r\n            value: \"PUT\"\r\n          },\r\n          {\r\n            label: \"DELETE\",\r\n            value: \"DELETE\"\r\n          }\r\n        ],\r\n          filterMultiple: false,\r\n          filterMethod(value, row) {\r\n          if (value == \"GET\") {\r\n            return row.method == \"GET\";\r\n          } else if (value == \"POST\") {\r\n            return row.method == \"POST\";\r\n          } else if (value == \"PUT\") {\r\n            return row.method == \"PUT\";\r\n          } else if (value == \"DELETE\") {\r\n            return row.method == \"DELETE\";\r\n          }\r\n        }\r\n        });\r\n        columns.push({\r\n          title: '控制器',\r\n          key: 'controller'\r\n        });\r\n        columns.push({\r\n          title: '方法',\r\n          key: 'action'\r\n        });\r\n        columns.push({\r\n          title: '操作 IP',\r\n          key: 'created_ip',\r\n        });\r\n        // columns.push({\r\n        //   title: 'IP 地址',\r\n        //   key: 'ipInfo',\r\n        // });\r\n        columns.push({\r\n          title: '操作时间',\r\n          key: 'created_at',\r\n          sortable: true,\r\n        });\r\n        return columns;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}