{"remainingRequest":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/home/donghai/Desktop/www/clover/public/source/admin/src/views/category/View.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/donghai/Desktop/www/clover/public/source/admin/src/views/category/View.vue","mtime":1574999410000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data () {\n    return {\n      disabled: false,\n      cascader: [],\n      formItem: {\n        id: 0,\n        name: '',\n        meta_title: '',\n        keywords: '',\n        description: '',\n        sort: 0,\n        is_show: true,\n        parent_id: [0],\n      },\n      ruleValidate: {\n        name: [\n          { required: true, message: '标题不能为空', trigger: 'blur' },\n          { type: 'string', min: 2, message: '标题必须大于 2 个字', trigger: 'blur' },\n          { type: 'string', max: 200, message: '标题必须小于200 个字', trigger: 'blur' },\n        ],\n        // sort: [\n        //   { type: 'number', message: '排序必须为整数', trigger: 'blur' },\n        // ]\n      }\n    }\n  },\n  created() {\n    var url = this.api.category.cascader;\n    this.$axios.get(url)\n      .then((response) => {\n        if (response.data.code == 0)\n        {\n          this.cascader = response.data.data\n        }else{\n          this.$Message.error('数据获取失败，请检查');\n        }\n      })\n    if (this.$route.query.id > 0)\n    {\n      this.$axios.get(this.api.category.view + '/' + this.$route.query.id)\n        .then((response) => {\n          if (response.data.code == 0)\n          {\n            this.formItem = response.data.data\n            if (response.data.data.id > 0 && response.data.data.id <= 6)\n            {\n              this.disabled = true\n            }\n          }else{\n            this.$Message.error('数据获取失败，请检查');\n          }\n        })\n    }\n  },\n  methods: {\n    format (labels, selectedData) {\n      const index = labels.length - 1;\n      const data = selectedData[index] || false;\n      if (data && data.code) {\n        return labels[index] + ' - ' + data.code;\n      }\n      return labels[index];\n    },\n    query(data) {\n      var url = this.api.user.view;\n      this.$axios.post(url, data)\n        .then((response) => {\n          if (response.data.code == 0)\n          {\n            this.$Message.success('操作成功');\n          }else{\n            this.$Message.error(response.data.msg);\n          }\n        })\n    },\n    getData() {\n      this.$axios.get(this.api.category.list)\n        .then((response) => {\n          this.tableData = response.data.data\n        })\n    },\n    gotoPage: function(name, params = {}){\n      this.$router.push({  //核心语句\n        name:name,   //跳转的路径\n        query:params,   //跳转的参数\n      })\n    },\n    handleSubmit (name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          var url = this.api.category.save;\n          this.$axios.post(url, this.formItem)\n            .then((response) => {\n              if (response.data.code == 0)\n              {\n                this.$Message.success('操作成功');\n                setTimeout(() => {\n                  this.gotoPage('category')\n                }, 1000)\n              }else{\n                this.$Message.error(response.data.msg);\n              }\n            })\n        } else {\n          this.$Message.error('请正确输入表单内容');\n        }\n      })\n    },\n    handleReset (name) {\n      this.$refs[name].resetFields();\n    }\n  }\n}\n",{"version":3,"sources":["View.vue"],"names":[],"mappingsfile":"View.vue","sourceRoot":"src/views/category","sourcesContent":["<template>\r\n    <div class=\"content\">\r\n        <Card :bordered=\"false\">\r\n            <p slot=\"title\"></p>\r\n            <Form ref=\"formItem\" :model=\"formItem\" :rules=\"ruleValidate\" :label-width=\"80\">\r\n                <FormItem label=\"上级栏目\" prop=\"parent_id\">\r\n                    <Cascader :data=\"cascader\" :disabled=\"disabled\" v-model=\"formItem.parent_id\" :filterable=\"true\" change-on-select></Cascader>\r\n                    <p v-if=\"disabled\">该栏目为系统核心数据 ，父级栏目不允不许修改</p>\r\n                    <p v-if=\"disabled == false\">上级栏目每个节点都可以选择，请注意正确选择合理的上级栏目, 默认和不选为无上级，创建顶级栏目</p>\r\n                </FormItem>\r\n                <FormItem label=\"标题\" prop=\"name\">\r\n                    <Input v-model=\"formItem.name\" placeholder=\"\"></Input>\r\n                </FormItem>\r\n                <FormItem label=\"SEO 标题\" prop=\"meta_title\">\r\n                    <Input v-model=\"formItem.meta_title\" placeholder=\"\"></Input>\r\n                </FormItem>\r\n                <FormItem label=\"SEO 关键词\" prop=\"keywords\">\r\n                    <Input v-model=\"formItem.keywords\" placeholder=\"\"></Input>\r\n                </FormItem>\r\n                <FormItem label=\"SEO 描述\" prop=\"description\">\r\n                    <Input v-model=\"formItem.description\" placeholder=\"\"></Input>\r\n                </FormItem>\r\n                <FormItem label=\"排序\" prop=\"sort\">\r\n                    <InputNumber :min=\"0\" :max=\"100000000\" v-model=\"formItem.sort\" placeholder=\"\"\r\n                    style=\"width: 100%\"\r\n                    ></InputNumber >\r\n                </FormItem>\r\n                <FormItem label=\"启用\" prop=\"is_show\">\r\n                    <i-switch v-model=\"formItem.is_show\" size=\"large\">\r\n                        <span slot=\"true\">启用</span>\r\n                        <span slot=\"false\">禁用</span>\r\n                    </i-switch>\r\n                </FormItem>\r\n                <FormItem>\r\n                    <FormItem>\r\n                        <Button type=\"primary\" @click=\"handleSubmit('formItem')\">保存</Button>\r\n                        <Button @click=\"handleReset('formItem')\" style=\"margin-left: 8px\">重置</Button>\r\n                    </FormItem>\r\n                </FormItem>\r\n            </Form>\r\n        </Card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data () {\r\n      return {\r\n        disabled: false,\r\n        cascader: [],\r\n        formItem: {\r\n          id: 0,\r\n          name: '',\r\n          meta_title: '',\r\n          keywords: '',\r\n          description: '',\r\n          sort: 0,\r\n          is_show: true,\r\n          parent_id: [0],\r\n        },\r\n        ruleValidate: {\r\n          name: [\r\n            { required: true, message: '标题不能为空', trigger: 'blur' },\r\n            { type: 'string', min: 2, message: '标题必须大于 2 个字', trigger: 'blur' },\r\n            { type: 'string', max: 200, message: '标题必须小于200 个字', trigger: 'blur' },\r\n          ],\r\n          // sort: [\r\n          //   { type: 'number', message: '排序必须为整数', trigger: 'blur' },\r\n          // ]\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      var url = this.api.category.cascader;\r\n      this.$axios.get(url)\r\n        .then((response) => {\r\n          if (response.data.code == 0)\r\n          {\r\n            this.cascader = response.data.data\r\n          }else{\r\n            this.$Message.error('数据获取失败，请检查');\r\n          }\r\n        })\r\n      if (this.$route.query.id > 0)\r\n      {\r\n        this.$axios.get(this.api.category.view + '/' + this.$route.query.id)\r\n          .then((response) => {\r\n            if (response.data.code == 0)\r\n            {\r\n              this.formItem = response.data.data\r\n              if (response.data.data.id > 0 && response.data.data.id <= 6)\r\n              {\r\n                this.disabled = true\r\n              }\r\n            }else{\r\n              this.$Message.error('数据获取失败，请检查');\r\n            }\r\n          })\r\n      }\r\n    },\r\n    methods: {\r\n      format (labels, selectedData) {\r\n        const index = labels.length - 1;\r\n        const data = selectedData[index] || false;\r\n        if (data && data.code) {\r\n          return labels[index] + ' - ' + data.code;\r\n        }\r\n        return labels[index];\r\n      },\r\n      query(data) {\r\n        var url = this.api.user.view;\r\n        this.$axios.post(url, data)\r\n          .then((response) => {\r\n            if (response.data.code == 0)\r\n            {\r\n              this.$Message.success('操作成功');\r\n            }else{\r\n              this.$Message.error(response.data.msg);\r\n            }\r\n          })\r\n      },\r\n      getData() {\r\n        this.$axios.get(this.api.category.list)\r\n          .then((response) => {\r\n            this.tableData = response.data.data\r\n          })\r\n      },\r\n      gotoPage: function(name, params = {}){\r\n        this.$router.push({  //核心语句\r\n          name:name,   //跳转的路径\r\n          query:params,   //跳转的参数\r\n        })\r\n      },\r\n      handleSubmit (name) {\r\n        this.$refs[name].validate((valid) => {\r\n          if (valid) {\r\n            var url = this.api.category.save;\r\n            this.$axios.post(url, this.formItem)\r\n              .then((response) => {\r\n                if (response.data.code == 0)\r\n                {\r\n                  this.$Message.success('操作成功');\r\n                  setTimeout(() => {\r\n                    this.gotoPage('category')\r\n                  }, 1000)\r\n                }else{\r\n                  this.$Message.error(response.data.msg);\r\n                }\r\n              })\r\n          } else {\r\n            this.$Message.error('请正确输入表单内容');\r\n          }\r\n        })\r\n      },\r\n      handleReset (name) {\r\n        this.$refs[name].resetFields();\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}