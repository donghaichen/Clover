{"remainingRequest":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/home/donghai/Desktop/www/clover/public/source/admin/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/donghai/Desktop/www/clover/public/source/admin/src/views/Login.vue","mtime":1575282228744},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Gt from \"../api/Gt.js\" ;//用于加载id对应的验证码库，并支持宕机模式 * 暴露\nimport logo from '../assets/img/logo.png'\nimport logoFace from '../assets/img/logo-facepalm.png'\nexport default {\n  name: 'login',\n  data() {\n    return {\n      logo: logo,\n      shake:false,\n      waitShow: true,\n      captchaObj: {},\n      result: {}, // 是否已验证极验\n      config: '',\n      menu: '',\n      account: '',\n      password: '',\n      checked: true,\n      isShowLoading: false,\n      accountError: false,\n      passwordError: false,\n      verifyError: false,\n      backgroundImage: this.api.common.bing,\n      bg: {}\n    }\n  },\n  created() {\n    this.bg.backgroundImage = 'url(' + this.backgroundImage +')'\n    this.getInitGtTest()\n  },\n  watch: {\n    $route: {\n      handler: function(route) {\n        this.redirect = route.query && route.query.redirect\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    getInitGtTest() {\n      this.$axios.get(this.api.static.geet + (new Date()).getTime())\n        .then(res => {\n          if (res.status === 200) {\n            const data = res.data\n            window.initGeetest({\n              gt: data.gt,\n              challenge: data.challenge,\n              offline: !data.success, // 表示用户后台检测极验服务器是否宕机\n              new_captcha: data.new_captcha, // 用于宕机时表示是新验证码的宕机\n              product: \"float\", // 产品形式，包括：float，popup\n              width: \"100%\",\n              https: true\n            }, captchaObj => { // 箭头函数 若使用function 使用this报错\n              this.captchaObj = captchaObj\n              captchaObj.appendTo(\"#captcha\");\n              captchaObj.onReady(() => {\n                this.waitShow = false // 隐藏等待提示\n              });\n              captchaObj.onSuccess(() => {\n                this.verifyError = false\n                this.result = captchaObj.getValidate();\n              });\n              captchaObj.onError(() => {\n                this.$Message.error(\"出错啦, 请稍后重试!\");\n              })\n            })\n          }\n        })\n        .catch(err => {\n          window.console.log(err)\n        })\n    },\n    verifyAccount() {\n      if (this.account.length < 1) {\n        this.$Message.error('用户名必填')\n        this.accountError = true\n      } else {\n        this.accountError = false\n      }\n    },\n    changeLogo() {\n      window.console.log(1111)\n      this.logo = logoFace\n    },\n    verifyPassword() {\n      // this.logo = logoFace\n      this.logo = logo\n      if (this.password.length < 1) {\n        this.$Message.error('密码必填，我不会偷看的 ＝。＝')\n        this.passwordError = true\n      } else {\n        this.passwordError = false\n      }\n    },\n    forgetPassword() {\n      this.$Message.info('请联系您的管理员重置密码')\n    },\n    submit() {\n      if (this.account != '' && this.password != '') {\n        if (!this.result.geetest_challenge) {\n          this.verifyError = true\n          return this.$Message.error(\"请先完成验证\")\n        }\n        this.$axios.post(this.api.common.login, {\n          username: this.account,\n          password: this.password,\n          geetest_challenge: this.result.geetest_challenge,\n          geetest_validate: this.result.geetest_validate,\n          geetest_seccode: this.result.geetest_seccode\n        }).then((response) => {\n            var res = response.data\n            if (res.code == 0)\n            {\n              var data = res.data\n              this.isShowLoading = true\n              this.userImg = data.avatar\n              this.token = data.remember_token\n              this.uid = data.id\n              this.config = JSON.stringify(data.config)\n              this.menu = JSON.stringify(data.menu)\n              this.userInfo = JSON.stringify(data.userInfo)\n              localStorage.setItem('userImg', this.userImg)\n              localStorage.setItem('userName', this.account)\n              localStorage.setItem('token', this.token)\n              localStorage.setItem('uid', this.uid)\n              localStorage.setItem('config', this.config)\n              localStorage.setItem('menu', this.menu)\n              localStorage.setItem('userInfo', this.userInfo)\n              localStorage.setItem('userInfo', this.userInfo)\n              localStorage.setItem('uploadBase', this.api.static.baseUrl)\n              localStorage.setItem('uploadContent', this.api.common.upload + '?module=content')\n              this.$router.push({path: this.redirect || '/'})\n            }else{\n              this.captchaObj.reset()\n              let that = this;\n              that.shake = true\n              setTimeout(function(){\n                that.shake = false\n              }, 500)\n              this.result = {}\n              this.$Message.error(res.msg);\n            }\n          }\n        )\n      } else {\n        if (this.account == '') {\n          this.$Message.error('用户名不能为空')\n          this.accountError = true\n        }\n        if (this.password == '') {\n          this.$Message.error('密码不能为空')\n          this.passwordError = true\n        }\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"login-vue\" :style=\"bg\">\r\n        <div class=\"container\">\r\n            <div class=\"loginBox\" v-bind:class=\"{ 'shake': shake }\">\r\n                <div class=\"userImage\">\r\n                    <!--          <img src=\"@/assets/img/logo-big.png\">-->\r\n                    <img :src=\"logo\">\r\n                </div>\r\n                <form id=\"loginForm\">\r\n                    <div class=\"input-wrapper\" v-bind:class=\"{ 'ivu-form-item-error': accountError }\">\r\n                        <Input prefix=\"ios-contact\" v-model=\"account\" placeholder=\"用户名\" @keyup.enter.native=\"submit\" clearable @on-blur=\"verifyAccount\"/>\r\n                    </div>\r\n                    <div class=\"input-wrapper\" v-bind:class=\"{ 'ivu-form-item-error': passwordError }\">\r\n                        <Input type=\"password\" v-model=\"password\" prefix=\"md-lock\" placeholder=\"密码\" @keyup.enter.native=\"submit\" clearable @on-focus=\"changeLogo\" @on-blur=\"verifyPassword\"/>\r\n                    </div>\r\n                    <div class=\"input-wrapper\" v-bind:class=\"{ 'ivu-form-item-error': verifyError }\">\r\n                        <div v-show=\"waitShow === false\" id=\"captcha\"></div>\r\n                        <div v-show=\"waitShow\" style=\"height: 32px;color: #000\" id=\"wait\"></div>\r\n                    </div>\r\n                    <div class=\"auto-login\">\r\n                        <Checkbox v-model=\"checked\">自动登录</Checkbox>\r\n                        <a @click=\"forgetPassword\">忘记密码?</a>\r\n                    </div>\r\n                    <Button :loading=\"isShowLoading\" class=\"submit\" type=\"primary\" @click=\"submit\">登陆</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n  import Gt from \"../api/Gt.js\" ;//用于加载id对应的验证码库，并支持宕机模式 * 暴露\r\n  import logo from '../assets/img/logo.png'\r\n  import logoFace from '../assets/img/logo-facepalm.png'\r\n  export default {\r\n    name: 'login',\r\n    data() {\r\n      return {\r\n        logo: logo,\r\n        shake:false,\r\n        waitShow: true,\r\n        captchaObj: {},\r\n        result: {}, // 是否已验证极验\r\n        config: '',\r\n        menu: '',\r\n        account: '',\r\n        password: '',\r\n        checked: true,\r\n        isShowLoading: false,\r\n        accountError: false,\r\n        passwordError: false,\r\n        verifyError: false,\r\n        backgroundImage: this.api.common.bing,\r\n        bg: {}\r\n      }\r\n    },\r\n    created() {\r\n      this.bg.backgroundImage = 'url(' + this.backgroundImage +')'\r\n      this.getInitGtTest()\r\n    },\r\n    watch: {\r\n      $route: {\r\n        handler: function(route) {\r\n          this.redirect = route.query && route.query.redirect\r\n        },\r\n        immediate: true\r\n      }\r\n    },\r\n    methods: {\r\n      getInitGtTest() {\r\n        this.$axios.get(this.api.static.geet + (new Date()).getTime())\r\n          .then(res => {\r\n            if (res.status === 200) {\r\n              const data = res.data\r\n              window.initGeetest({\r\n                gt: data.gt,\r\n                challenge: data.challenge,\r\n                offline: !data.success, // 表示用户后台检测极验服务器是否宕机\r\n                new_captcha: data.new_captcha, // 用于宕机时表示是新验证码的宕机\r\n                product: \"float\", // 产品形式，包括：float，popup\r\n                width: \"100%\",\r\n                https: true\r\n              }, captchaObj => { // 箭头函数 若使用function 使用this报错\r\n                this.captchaObj = captchaObj\r\n                captchaObj.appendTo(\"#captcha\");\r\n                captchaObj.onReady(() => {\r\n                  this.waitShow = false // 隐藏等待提示\r\n                });\r\n                captchaObj.onSuccess(() => {\r\n                  this.verifyError = false\r\n                  this.result = captchaObj.getValidate();\r\n                });\r\n                captchaObj.onError(() => {\r\n                  this.$Message.error(\"出错啦, 请稍后重试!\");\r\n                })\r\n              })\r\n            }\r\n          })\r\n          .catch(err => {\r\n            window.console.log(err)\r\n          })\r\n      },\r\n      verifyAccount() {\r\n        if (this.account.length < 1) {\r\n          this.$Message.error('用户名必填')\r\n          this.accountError = true\r\n        } else {\r\n          this.accountError = false\r\n        }\r\n      },\r\n      changeLogo() {\r\n        window.console.log(1111)\r\n        this.logo = logoFace\r\n      },\r\n      verifyPassword() {\r\n        // this.logo = logoFace\r\n        this.logo = logo\r\n        if (this.password.length < 1) {\r\n          this.$Message.error('密码必填，我不会偷看的 ＝。＝')\r\n          this.passwordError = true\r\n        } else {\r\n          this.passwordError = false\r\n        }\r\n      },\r\n      forgetPassword() {\r\n        this.$Message.info('请联系您的管理员重置密码')\r\n      },\r\n      submit() {\r\n        if (this.account != '' && this.password != '') {\r\n          if (!this.result.geetest_challenge) {\r\n            this.verifyError = true\r\n            return this.$Message.error(\"请先完成验证\")\r\n          }\r\n          this.$axios.post(this.api.common.login, {\r\n            username: this.account,\r\n            password: this.password,\r\n            geetest_challenge: this.result.geetest_challenge,\r\n            geetest_validate: this.result.geetest_validate,\r\n            geetest_seccode: this.result.geetest_seccode\r\n          }).then((response) => {\r\n              var res = response.data\r\n              if (res.code == 0)\r\n              {\r\n                var data = res.data\r\n                this.isShowLoading = true\r\n                this.userImg = data.avatar\r\n                this.token = data.remember_token\r\n                this.uid = data.id\r\n                this.config = JSON.stringify(data.config)\r\n                this.menu = JSON.stringify(data.menu)\r\n                this.userInfo = JSON.stringify(data.userInfo)\r\n                localStorage.setItem('userImg', this.userImg)\r\n                localStorage.setItem('userName', this.account)\r\n                localStorage.setItem('token', this.token)\r\n                localStorage.setItem('uid', this.uid)\r\n                localStorage.setItem('config', this.config)\r\n                localStorage.setItem('menu', this.menu)\r\n                localStorage.setItem('userInfo', this.userInfo)\r\n                localStorage.setItem('userInfo', this.userInfo)\r\n                localStorage.setItem('uploadBase', this.api.static.baseUrl)\r\n                localStorage.setItem('uploadContent', this.api.common.upload + '?module=content')\r\n                this.$router.push({path: this.redirect || '/'})\r\n              }else{\r\n                this.captchaObj.reset()\r\n                let that = this;\r\n                that.shake = true\r\n                setTimeout(function(){\r\n                  that.shake = false\r\n                }, 500)\r\n                this.result = {}\r\n                this.$Message.error(res.msg);\r\n              }\r\n            }\r\n          )\r\n        } else {\r\n          if (this.account == '') {\r\n            this.$Message.error('用户名不能为空')\r\n            this.accountError = true\r\n          }\r\n          if (this.password == '') {\r\n            this.$Message.error('密码不能为空')\r\n            this.passwordError = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n    @import \"../assets/css/shake.css\";\r\n    .login-vue {\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: #fff;\r\n        background-repeat: no-repeat;\r\n        background-size:cover;\r\n    }\r\n    .login-vue .container {\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .login-vue .loginBox {\r\n        width: 350px;\r\n        background-color: white;\r\n        box-shadow: 0px 0px 43px -2px rgba(135,130,135,1);\r\n        border-radius: 8px;\r\n        padding: 25px;\r\n        opacity: .7;\r\n    }\r\n    .login-vue .userImage {\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        width: 120px;\r\n        height: 120px;\r\n        margin: 10px auto 30px;\r\n        opacity: .7;\r\n    }\r\n    .login-vue img {\r\n        width: 100%;\r\n    }\r\n    .login-vue .input-wrapper {\r\n        position: relative;\r\n    }\r\n    .login-vue .ivu-input {\r\n        width: 100%;\r\n        /*height: 42px;*/\r\n        padding-top: 15px;\r\n        padding-bottom: 15px;\r\n        margin: 10px 0;\r\n        /*font-size: 14px;*/\r\n    }\r\n    .login-vue .ivu-input-icon {\r\n        top: 8px;\r\n    }\r\n    .login-vue .ivu-input-prefix, .login-vue .ivu-input-suffix {\r\n        top: 10px;\r\n    }\r\n    .login-vue .ivu-checkbox-wrapper {\r\n        color: #9a9a9a;\r\n    }\r\n    .login-vue .auto-login a{\r\n        float: right;\r\n    }\r\n    .login-vue .submit {\r\n        width: 100%;\r\n        margin-top: 35px;\r\n        color: white;\r\n        font-weight: lighter;\r\n    }\r\n    #captcha{\r\n        margin: 10px 0 20px;\r\n        height: 32px;\r\n        color: rgb(0, 0, 0);\r\n        overflow: hidden;\r\n        border: 1px solid #dcdee2;\r\n        border-radius: 4px;\r\n    }\r\n    .geetest_holder.geetest_wind {\r\n        margin-top: -6px;\r\n    }\r\n    .geetest_holder.geetest_wind .geetest_radar_btn, .geetest_holder.geetest_wind .geetest_success_btn\r\n    {\r\n        border: none!important;\r\n    }\r\n    .geetest_holder.geetest_wind .geetest_radar_tip, .geetest_holder.geetest_wind .geetest_success_radar_tip\r\n    {\r\n        font-size: 12px!important;\r\n    }\r\n    @media (max-width: 640px)\r\n    {\r\n\r\n        .login-vue .loginBox {\r\n            width: 320px;\r\n        }\r\n    }\r\n</style>\r\n"]}]}