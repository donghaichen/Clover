{"remainingRequest":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/home/donghai/Desktop/www/clover/public/source/admin/src/views/user/User.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/donghai/Desktop/www/clover/public/source/admin/src/views/user/User.vue","mtime":1574999402000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport avatar from '@/assets/img/avatar.png'\r\n  export default {\r\n    data () {\r\n      return {\r\n        avatar:avatar,\r\n        tableData: [\r\n        ],\r\n        total: 0,\r\n        current: 0,\r\n        pageSize: 0,\r\n        showBorder: true,\r\n        showStripe: true,\r\n        showHeader: true,\r\n        showIndex: false,\r\n        showCheckbox: true,\r\n        fixedHeader: false,\r\n        tableSize: 'default'\r\n      }\r\n    },\r\n    created: function () {\r\n      this.getData(1)\r\n    },\r\n    methods: {\r\n      gotoPage: function(name, params = {}){\r\n        this.$router.push({  //核心语句\r\n          name:name,   //跳转的路径\r\n          query:params,   //跳转的参数\r\n        })\r\n      },\r\n      getData(page) {\r\n        page = page > 0 ? page : 0;\r\n        this.$axios.get(this.api.user.list + '?page=' + page)\r\n          .then((response) => {\r\n            this.tableData = response.data.data.data\r\n            this.current = response.data.data.current_page\r\n            this.total = response.data.data.total\r\n            this.pageSize = response.data.data.per_page\r\n            return this.tableData\r\n          })\r\n      },\r\n      show (index) {\r\n\r\n      },\r\n      remove (index) {\r\n        // this.data6.splice(index, 1);\r\n      },\r\n      changePage (index) {\r\n        this.tableData = this.getData(index);\r\n      }\r\n    },\r\n    computed: {\r\n      tableColumns () {\r\n        let columns = [];\r\n        // if (this.showCheckbox) {\r\n        //   columns.push({\r\n        //     type: 'selection',\r\n        //     width: 60,\r\n        //     align: 'center'\r\n        //   })\r\n        // }\r\n        columns.push({\r\n          title: '用户 ID',\r\n          key: 'id',\r\n          sortable: true\r\n        });\r\n        columns.push({\r\n          title: '用户名',\r\n          key: 'username',\r\n          tooltip: true\r\n        });\r\n        columns.push({\r\n          title: '邮箱',\r\n          key: 'email',\r\n          tooltip: true\r\n        });\r\n        columns.push({\r\n          title: '手机',\r\n          key: 'mobile',\r\n          tooltip: true\r\n        });\r\n        columns.push({\r\n          title: '昵称',\r\n          key: 'nickname',\r\n          tooltip: true\r\n        });\r\n        columns.push({\r\n          title: '头像',\r\n          key: 'avatar',\r\n          render: (h, params) => {\r\n            const row = params.row;\r\n            var avatar\r\n            if (row.avatar.length > 0 && row.avatar.substr(0,4).toLowerCase() == \"http\" )\r\n            {\r\n              avatar = row.avatar;\r\n            }else if(row.avatar.length > 0 && row.avatar.substr(0,4).toLowerCase() != \"http\")\r\n            {\r\n              avatar = this.api.static.baseUrl + row.avatar;\r\n            }else\r\n            {\r\n              avatar = this.avatar\r\n            }\r\n\r\n            return h('Avatar', {\r\n              props: {\r\n                icon: 'ios-person',\r\n                src: avatar,\r\n                shape: 'square',\r\n                // size: 'small',\r\n              }\r\n            });\r\n          }\r\n        });\r\n        columns.push({\r\n          title: '状态',\r\n          key: 'status',\r\n          render: (h, params) => {\r\n            const row = params.row;\r\n            const color = row.status === 1 ? 'success' : row.status === 2 ? 'warning' : 'error';\r\n            const text = row.status === 1 ? '正常' : row.status === 2 ? '禁用' : '未知';\r\n\r\n            return h('Tag', {\r\n              props: {\r\n                type: 'dot',\r\n                color: color\r\n              }\r\n            }, text);\r\n          }\r\n        });\r\n        columns.push({\r\n          title: '注册IP',\r\n          key: 'created_ip',\r\n        });\r\n        // columns.push({\r\n        //   title: 'IP 地址',\r\n        //   key: 'ipInfo',\r\n        // });\r\n        columns.push({\r\n          title: '注册时间',\r\n          key: 'created_at',\r\n          sortable: true,\r\n        });\r\n        columns.push({\r\n          title: '操作',\r\n          key: 'action',\r\n          width: 150,\r\n          align: 'center',\r\n          render: (h, params) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  type: 'primary',\r\n                  size: 'small',\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.gotoPage('adminUserView',{\r\n                      uid:params.row.id\r\n                    })\r\n                  }\r\n                }\r\n              }, '详情'),\r\n              // h('Button', {\r\n              //   props: {\r\n              //     type: 'error',\r\n              //     size: 'small',\r\n              //     disabled: 'disabled'\r\n              //   },\r\n              //   on: {\r\n              //     click: () => {\r\n              //     }\r\n              //   }\r\n              // }, '删除')\r\n            ]);\r\n          }\r\n        });\r\n        return columns;\r\n      }\r\n    }\r\n  }\r\n",{"version":3,"sources":["User.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"User.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\r\n    <div class=\"content\">\r\n        <Table :border=\"showBorder\"\r\n               :stripe=\"showStripe\"\r\n               :show-header=\"showHeader\"\r\n               :height=\"fixedHeader ? 250 : ''\"\r\n               :size=\"tableSize\"\r\n               :data=\"tableData\"\r\n               :columns=\"tableColumns\"\r\n        >\r\n        </Table>\r\n        <div style=\"margin: 10px;overflow: hidden\">\r\n            <div style=\"float: right;\">\r\n                <Page :total=\"total\" :current=\"current\" :page-size=\"pageSize\" show-total show-elevator @on-change=\"changePage\"></Page>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport avatar from '@/assets/img/avatar.png'\r\n  export default {\r\n    data () {\r\n      return {\r\n        avatar:avatar,\r\n        tableData: [\r\n        ],\r\n        total: 0,\r\n        current: 0,\r\n        pageSize: 0,\r\n        showBorder: true,\r\n        showStripe: true,\r\n        showHeader: true,\r\n        showIndex: false,\r\n        showCheckbox: true,\r\n        fixedHeader: false,\r\n        tableSize: 'default'\r\n      }\r\n    },\r\n    created: function () {\r\n      this.getData(1)\r\n    },\r\n    methods: {\r\n      gotoPage: function(name, params = {}){\r\n        this.$router.push({  //核心语句\r\n          name:name,   //跳转的路径\r\n          query:params,   //跳转的参数\r\n        })\r\n      },\r\n      getData(page) {\r\n        page = page > 0 ? page : 0;\r\n        this.$axios.get(this.api.user.list + '?page=' + page)\r\n          .then((response) => {\r\n            this.tableData = response.data.data.data\r\n            this.current = response.data.data.current_page\r\n            this.total = response.data.data.total\r\n            this.pageSize = response.data.data.per_page\r\n            return this.tableData\r\n          })\r\n      },\r\n      show (index) {\r\n\r\n      },\r\n      remove (index) {\r\n        // this.data6.splice(index, 1);\r\n      },\r\n      changePage (index) {\r\n        this.tableData = this.getData(index);\r\n      }\r\n    },\r\n    computed: {\r\n      tableColumns () {\r\n        let columns = [];\r\n        // if (this.showCheckbox) {\r\n        //   columns.push({\r\n        //     type: 'selection',\r\n        //     width: 60,\r\n        //     align: 'center'\r\n        //   })\r\n        // }\r\n        columns.push({\r\n          title: '用户 ID',\r\n          key: 'id',\r\n          sortable: true\r\n        });\r\n        columns.push({\r\n          title: '用户名',\r\n          key: 'username',\r\n          tooltip: true\r\n        });\r\n        columns.push({\r\n          title: '邮箱',\r\n          key: 'email',\r\n          tooltip: true\r\n        });\r\n        columns.push({\r\n          title: '手机',\r\n          key: 'mobile',\r\n          tooltip: true\r\n        });\r\n        columns.push({\r\n          title: '昵称',\r\n          key: 'nickname',\r\n          tooltip: true\r\n        });\r\n        columns.push({\r\n          title: '头像',\r\n          key: 'avatar',\r\n          render: (h, params) => {\r\n            const row = params.row;\r\n            var avatar\r\n            if (row.avatar.length > 0 && row.avatar.substr(0,4).toLowerCase() == \"http\" )\r\n            {\r\n              avatar = row.avatar;\r\n            }else if(row.avatar.length > 0 && row.avatar.substr(0,4).toLowerCase() != \"http\")\r\n            {\r\n              avatar = this.api.static.baseUrl + row.avatar;\r\n            }else\r\n            {\r\n              avatar = this.avatar\r\n            }\r\n\r\n            return h('Avatar', {\r\n              props: {\r\n                icon: 'ios-person',\r\n                src: avatar,\r\n                shape: 'square',\r\n                // size: 'small',\r\n              }\r\n            });\r\n          }\r\n        });\r\n        columns.push({\r\n          title: '状态',\r\n          key: 'status',\r\n          render: (h, params) => {\r\n            const row = params.row;\r\n            const color = row.status === 1 ? 'success' : row.status === 2 ? 'warning' : 'error';\r\n            const text = row.status === 1 ? '正常' : row.status === 2 ? '禁用' : '未知';\r\n\r\n            return h('Tag', {\r\n              props: {\r\n                type: 'dot',\r\n                color: color\r\n              }\r\n            }, text);\r\n          }\r\n        });\r\n        columns.push({\r\n          title: '注册IP',\r\n          key: 'created_ip',\r\n        });\r\n        // columns.push({\r\n        //   title: 'IP 地址',\r\n        //   key: 'ipInfo',\r\n        // });\r\n        columns.push({\r\n          title: '注册时间',\r\n          key: 'created_at',\r\n          sortable: true,\r\n        });\r\n        columns.push({\r\n          title: '操作',\r\n          key: 'action',\r\n          width: 150,\r\n          align: 'center',\r\n          render: (h, params) => {\r\n            return h('div', [\r\n              h('Button', {\r\n                props: {\r\n                  type: 'primary',\r\n                  size: 'small',\r\n                },\r\n                style: {\r\n                  marginRight: '5px'\r\n                },\r\n                on: {\r\n                  click: () => {\r\n                    this.gotoPage('adminUserView',{\r\n                      uid:params.row.id\r\n                    })\r\n                  }\r\n                }\r\n              }, '详情'),\r\n              // h('Button', {\r\n              //   props: {\r\n              //     type: 'error',\r\n              //     size: 'small',\r\n              //     disabled: 'disabled'\r\n              //   },\r\n              //   on: {\r\n              //     click: () => {\r\n              //     }\r\n              //   }\r\n              // }, '删除')\r\n            ]);\r\n          }\r\n        });\r\n        return columns;\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}