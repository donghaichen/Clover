{"remainingRequest":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/home/donghai/Desktop/www/clover/public/source/admin/src/views/content/NewsView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/donghai/Desktop/www/clover/public/source/admin/src/views/content/NewsView.vue","mtime":1574999404000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donghai/Desktop/www/clover/public/source/admin/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TinymceEditor from '../../components/Tinymce'\nexport default {\n  components: {\n    TinymceEditor\n  },\n  data () {\n    return {\n      file_size: JSON.parse(localStorage.getItem('config')).file_size,\n      uploadUrl: this.api.common.upload,\n      contentType: 'news',\n      cascader: [],\n      formItem: {\n        id: 0,\n        title: '',\n        image: '',\n        is_recommend: false,\n        content: '',\n        category_id: [0],\n      },\n      ruleValidate: {\n        title: [\n          { required: true, message: '标题不能为空', trigger: 'blur' },\n          { type: 'string', min: 2, message: '标题必须大于 2 个字', trigger: 'blur' },\n          { type: 'string', max: 200, message: '标题必须小于200 个字', trigger: 'blur' },\n        ],\n        // category_id: [\n        //   { required: true, message: '所属栏目必选', trigger: 'blur' },\n        // ],\n      }\n    }\n  },\n  created() {\n    this.uploadUrl = this.uploadUrl + '?module=' + this.contentType\n\n    // 所属栏目\n    var url = this.api.category.cascaderContent + this.contentType;\n    this.$axios.get(url)\n      .then((response) => {\n        if (response.data.code == 0)\n        {\n          this.cascader = response.data.data\n        }else{\n          this.$Message.error('数据获取失败，请检查');\n        }\n      })\n    //表单内容\n    if (this.$route.query.id > 0)\n    {\n      this.$axios.get(this.api.content.view + this.contentType + '/' + this.$route.query.id)\n        .then((response) => {\n          if (response.data.code == 0)\n          {\n            this.formItem = response.data.data\n          }else{\n            this.$Message.error('数据获取失败，请检查');\n          }\n        })\n    }\n  },\n  methods: {\n    viewPic (src) {\n      if(src.length <= 0)\n      {\n        this.$Message.error('尚未上传图片，无法查看')\n        return false\n      }\n      if(src.substr(0,4).toLowerCase() != \"http\")\n      {\n        src = this.api.static.baseUrl + src;\n      }\n      const title = '查看图片';\n      const content = '<img style=\"width: 88%\" src=\"' + src +'\">';\n      this.$Modal.info({\n        title: title,\n        content: content\n      });\n    },\n    handleSuccess (response) {\n      this.formItem.image = response.data.url\n      this.$Message.success('上传成功')\n    },\n    handleError (event) {\n      window.console.log(event)\n      this.$Message.error('上传错误，请重新上传')\n\n    },\n    handleFormatError (file) {\n      this.$Notice.warning({\n        title: '文件格式错误',\n        desc: '文件： ' + file.name + ' 格式错误, 请上传允许的文件.'\n      });\n    },\n    handleMaxSize (file) {\n      this.$Notice.warning({\n        title: '文件大小超过限制',\n        desc: '文件：  ' + file.name + ' 不超过' +  this.file_size + 'M'\n      });\n    },\n    // 清空内容\n    clear () {\n      this.$refs.editor.clear()\n    },\n    format (labels, selectedData) {\n      const index = labels.length - 1;\n      const data = selectedData[index] || false;\n      if (data && data.code) {\n        return labels[index] + ' - ' + data.code;\n      }\n      return labels[index];\n    },\n    query(data) {\n      var url = this.api.user.view;\n      this.$axios.post(url, data)\n        .then((response) => {\n          if (response.data.code == 0)\n          {\n            this.$Message.success('操作成功');\n          }else{\n            this.$Message.error(response.data.msg);\n          }\n        })\n    },\n    gotoPage: function(name, params = {}){\n      this.$router.push({  //核心语句\n        name:name,   //跳转的路径\n        query:params,   //跳转的参数\n      })\n    },\n    handleSubmit (name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          var url = this.api.content.save + this.contentType + '/' + this.formItem.id;\n          this.$axios.post(url, this.formItem)\n                .then((response) => {\n                  if (response.data.code == 0)\n                  {\n                    this.$Message.success('操作成功');\n                    setTimeout(() => {\n                      this.gotoPage(this.contentType)\n                    }, 1000)\n                  }else{\n                    this.$Message.error(response.data.msg);\n                  }\n            })\n        } else {\n          this.$Message.error('请正确输入表单内容');\n        }\n      })\n    },\n    handleReset (name) {\n      this.$refs[name].resetFields();\n    }\n  }\n}\n",{"version":3,"sources":["NewsView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"NewsView.vue","sourceRoot":"src/views/content","sourcesContent":["<template>\r\n    <div class=\"content\">\r\n        <Card :bordered=\"false\">\r\n            <p slot=\"title\"></p>\r\n            <Form ref=\"formItem\" :model=\"formItem\" :rules=\"ruleValidate\" :label-width=\"80\">\r\n                <FormItem label=\"所属栏目\" prop=\"category_id\">\r\n                    <Cascader :data=\"cascader\" v-model=\"formItem.category_id\" :filterable=\"true\" change-on-select></Cascader>\r\n                    <p>所属栏目必选，发布到顶级栏目可以选择无上级</p>\r\n                </FormItem>\r\n                <FormItem label=\"标题\" prop=\"title\">\r\n                    <Input v-model=\"formItem.title\" placeholder=\"\"></Input>\r\n                </FormItem>\r\n                <FormItem label=\"缩略图\" prop=\"image\">\r\n                    <Input v-model=\"formItem.image\" disabled placeholder=\"请上传缩略图\"></Input>\r\n                    <p class=\"desc\">支持上传的文件格式为 jpg·jpeg·png·gif 且文件大小不超过 {{file_size}} M</p>\r\n                    <Upload\r\n                            ref=\"upload\"\r\n                            :show-upload-list=\"false\"\r\n                            :on-success=\"handleSuccess\"\r\n                            :on-error=\"handleError\"\r\n                            :max-size=\"file_size * 1024\"\r\n                            :on-format-error=\"handleFormatError\"\r\n                            :on-exceeded-size=\"handleMaxSize\"\r\n                            :format=\"['jpg','jpeg','png', 'gif']\"\r\n                            :action=\"uploadUrl\">\r\n                        <Button icon=\"ios-cloud-upload-outline\">上传</Button>\r\n                    </Upload>\r\n                    <Button style=\"margin-left: 100px;margin-top: -68px;\" @click=\"viewPic(formItem.image)\">查看图片</Button>\r\n                </FormItem>\r\n                <FormItem label=\"是否推荐\">\r\n                    <i-switch v-model=\"formItem.is_recommend\" size=\"large\">\r\n                        <span slot=\"true\">开启</span>\r\n                        <span slot=\"false\">关闭</span>\r\n                    </i-switch>\r\n                </FormItem>\r\n                <FormItem label=\"内容\" prop=\"content\">\r\n                    <tinymce-editor ref=\"editor\"\r\n                                    v-model=\"formItem.content\"\r\n                    >\r\n                    </tinymce-editor>\r\n                </FormItem>\r\n\r\n                <FormItem>\r\n                    <FormItem>\r\n                        <Button type=\"primary\" @click=\"handleSubmit('formItem')\">保存</Button>\r\n                        <Button @click=\"handleReset('formItem')\" style=\"margin-left: 8px\">重置</Button>\r\n                    </FormItem>\r\n                </FormItem>\r\n            </Form>\r\n        </Card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n  import TinymceEditor from '../../components/Tinymce'\r\n  export default {\r\n    components: {\r\n      TinymceEditor\r\n    },\r\n    data () {\r\n      return {\r\n        file_size: JSON.parse(localStorage.getItem('config')).file_size,\r\n        uploadUrl: this.api.common.upload,\r\n        contentType: 'news',\r\n        cascader: [],\r\n        formItem: {\r\n          id: 0,\r\n          title: '',\r\n          image: '',\r\n          is_recommend: false,\r\n          content: '',\r\n          category_id: [0],\r\n        },\r\n        ruleValidate: {\r\n          title: [\r\n            { required: true, message: '标题不能为空', trigger: 'blur' },\r\n            { type: 'string', min: 2, message: '标题必须大于 2 个字', trigger: 'blur' },\r\n            { type: 'string', max: 200, message: '标题必须小于200 个字', trigger: 'blur' },\r\n          ],\r\n          // category_id: [\r\n          //   { required: true, message: '所属栏目必选', trigger: 'blur' },\r\n          // ],\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.uploadUrl = this.uploadUrl + '?module=' + this.contentType\r\n\r\n      // 所属栏目\r\n      var url = this.api.category.cascaderContent + this.contentType;\r\n      this.$axios.get(url)\r\n        .then((response) => {\r\n          if (response.data.code == 0)\r\n          {\r\n            this.cascader = response.data.data\r\n          }else{\r\n            this.$Message.error('数据获取失败，请检查');\r\n          }\r\n        })\r\n      //表单内容\r\n      if (this.$route.query.id > 0)\r\n      {\r\n        this.$axios.get(this.api.content.view + this.contentType + '/' + this.$route.query.id)\r\n          .then((response) => {\r\n            if (response.data.code == 0)\r\n            {\r\n              this.formItem = response.data.data\r\n            }else{\r\n              this.$Message.error('数据获取失败，请检查');\r\n            }\r\n          })\r\n      }\r\n    },\r\n    methods: {\r\n      viewPic (src) {\r\n        if(src.length <= 0)\r\n        {\r\n          this.$Message.error('尚未上传图片，无法查看')\r\n          return false\r\n        }\r\n        if(src.substr(0,4).toLowerCase() != \"http\")\r\n        {\r\n          src = this.api.static.baseUrl + src;\r\n        }\r\n        const title = '查看图片';\r\n        const content = '<img style=\"width: 88%\" src=\"' + src +'\">';\r\n        this.$Modal.info({\r\n          title: title,\r\n          content: content\r\n        });\r\n      },\r\n      handleSuccess (response) {\r\n        this.formItem.image = response.data.url\r\n        this.$Message.success('上传成功')\r\n      },\r\n      handleError (event) {\r\n        window.console.log(event)\r\n        this.$Message.error('上传错误，请重新上传')\r\n\r\n      },\r\n      handleFormatError (file) {\r\n        this.$Notice.warning({\r\n          title: '文件格式错误',\r\n          desc: '文件： ' + file.name + ' 格式错误, 请上传允许的文件.'\r\n        });\r\n      },\r\n      handleMaxSize (file) {\r\n        this.$Notice.warning({\r\n          title: '文件大小超过限制',\r\n          desc: '文件：  ' + file.name + ' 不超过' +  this.file_size + 'M'\r\n        });\r\n      },\r\n      // 清空内容\r\n      clear () {\r\n        this.$refs.editor.clear()\r\n      },\r\n      format (labels, selectedData) {\r\n        const index = labels.length - 1;\r\n        const data = selectedData[index] || false;\r\n        if (data && data.code) {\r\n          return labels[index] + ' - ' + data.code;\r\n        }\r\n        return labels[index];\r\n      },\r\n      query(data) {\r\n        var url = this.api.user.view;\r\n        this.$axios.post(url, data)\r\n          .then((response) => {\r\n            if (response.data.code == 0)\r\n            {\r\n              this.$Message.success('操作成功');\r\n            }else{\r\n              this.$Message.error(response.data.msg);\r\n            }\r\n          })\r\n      },\r\n      gotoPage: function(name, params = {}){\r\n        this.$router.push({  //核心语句\r\n          name:name,   //跳转的路径\r\n          query:params,   //跳转的参数\r\n        })\r\n      },\r\n      handleSubmit (name) {\r\n        this.$refs[name].validate((valid) => {\r\n          if (valid) {\r\n            var url = this.api.content.save + this.contentType + '/' + this.formItem.id;\r\n            this.$axios.post(url, this.formItem)\r\n                  .then((response) => {\r\n                    if (response.data.code == 0)\r\n                    {\r\n                      this.$Message.success('操作成功');\r\n                      setTimeout(() => {\r\n                        this.gotoPage(this.contentType)\r\n                      }, 1000)\r\n                    }else{\r\n                      this.$Message.error(response.data.msg);\r\n                    }\r\n              })\r\n          } else {\r\n            this.$Message.error('请正确输入表单内容');\r\n          }\r\n        })\r\n      },\r\n      handleReset (name) {\r\n        this.$refs[name].resetFields();\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}